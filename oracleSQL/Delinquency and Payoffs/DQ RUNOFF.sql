DROP TABLE AT_DQ_HIST;
DROP TABLE AT_DQ_HIST2;
COMMIT;
CREATE TABLE AT_DQ_HIST AS
	SELECT
	ACCOUNT_NUMBER,
	PORTFOLIO,
	PAYOFF_DATE,
	SUBSTR(STR,1,cast(TO_CHAR(trunc(sysdate),'MM') as number)+10) || GREATEST(SUBSTR(STR,cast(TO_CHAR(trunc(sysdate),'MM') as number)+11,1),DPD_CURRENT) AS STR,
	STR AS STR_24MTH
	FROM
	(
		SELECT A.ACCOUNT_NUMBER, B.PORTFOLIO, B.PAYOFF_DATE, CASE WHEN B.DELINQUENCY_DAYS_PAST_DUE >= 30 THEN '1' ELSE '0' END AS DPD_CURRENT,
		(CASE WHEN DPD_LAST_YEAR_JAN >=90 THEN '3' WHEN DPD_LAST_YEAR_JAN >=60 THEN '2' WHEN DPD_LAST_YEAR_JAN >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_FEB >=90 THEN '3' WHEN DPD_LAST_YEAR_FEB >=60 THEN '2' WHEN DPD_LAST_YEAR_FEB >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_MAR >=90 THEN '3' WHEN DPD_LAST_YEAR_MAR >=60 THEN '2' WHEN DPD_LAST_YEAR_MAR >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_APR >=90 THEN '3' WHEN DPD_LAST_YEAR_APR >=60 THEN '2' WHEN DPD_LAST_YEAR_APR >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_MAY >=90 THEN '3' WHEN DPD_LAST_YEAR_MAY >=60 THEN '2' WHEN DPD_LAST_YEAR_MAY >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_JUN >=90 THEN '3' WHEN DPD_LAST_YEAR_JUN >=60 THEN '2' WHEN DPD_LAST_YEAR_JUN >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_JUL >=90 THEN '3' WHEN DPD_LAST_YEAR_JUL >=60 THEN '2' WHEN DPD_LAST_YEAR_JUL >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_AUG >=90 THEN '3' WHEN DPD_LAST_YEAR_AUG >=60 THEN '2' WHEN DPD_LAST_YEAR_AUG >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_SEP >=90 THEN '3' WHEN DPD_LAST_YEAR_SEP >=60 THEN '2' WHEN DPD_LAST_YEAR_SEP >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_OCT >=90 THEN '3' WHEN DPD_LAST_YEAR_OCT >=60 THEN '2' WHEN DPD_LAST_YEAR_OCT >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_NOV >=90 THEN '3' WHEN DPD_LAST_YEAR_NOV >=60 THEN '2' WHEN DPD_LAST_YEAR_NOV >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_LAST_YEAR_DEC >=90 THEN '3' WHEN DPD_LAST_YEAR_DEC >=60 THEN '2' WHEN DPD_LAST_YEAR_DEC >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_JAN >=90 THEN '3' WHEN DPD_CUR_YEAR_JAN >=60 THEN '2' WHEN DPD_CUR_YEAR_JAN >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_FEB >=90 THEN '3' WHEN DPD_CUR_YEAR_FEB >=60 THEN '2' WHEN DPD_CUR_YEAR_FEB >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_MAR >=90 THEN '3' WHEN DPD_CUR_YEAR_MAR >=60 THEN '2' WHEN DPD_CUR_YEAR_MAR >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_APR >=90 THEN '3' WHEN DPD_CUR_YEAR_APR >=60 THEN '2' WHEN DPD_CUR_YEAR_APR >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_MAY >=90 THEN '3' WHEN DPD_CUR_YEAR_MAY >=60 THEN '2' WHEN DPD_CUR_YEAR_MAY >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_JUN >=90 THEN '3' WHEN DPD_CUR_YEAR_JUN >=60 THEN '2' WHEN DPD_CUR_YEAR_JUN >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_JUL >=90 THEN '3' WHEN DPD_CUR_YEAR_JUL >=60 THEN '2' WHEN DPD_CUR_YEAR_JUL >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_AUG >=90 THEN '3' WHEN DPD_CUR_YEAR_AUG >=60 THEN '2' WHEN DPD_CUR_YEAR_AUG >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_SEP >=90 THEN '3' WHEN DPD_CUR_YEAR_SEP >=60 THEN '2' WHEN DPD_CUR_YEAR_SEP >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_OCT >=90 THEN '3' WHEN DPD_CUR_YEAR_OCT >=60 THEN '2' WHEN DPD_CUR_YEAR_OCT >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_NOV >=90 THEN '3' WHEN DPD_CUR_YEAR_NOV >=60 THEN '2' WHEN DPD_CUR_YEAR_NOV >=30 THEN '1' ELSE '0' END) ||
		(CASE WHEN DPD_CUR_YEAR_DEC >=90 THEN '3' WHEN DPD_CUR_YEAR_DEC >=60 THEN '2' WHEN DPD_CUR_YEAR_DEC >=30 THEN '1' ELSE '0' END)
		AS STR
		FROM
		mdm.gt_servicing_msp_gta_wkly_v@LNK2MTGIWP.DITECH.US A, MDM_LOAN B,
		(SELECT FNMA_LN FROM STREAMLINE_HARP_FNMA_IPV WHERE AVM_DATE = (SELECT MAX(AVM_DATE) FROM STREAMLINE_HARP_FNMA_IPV WHERE AVM_DATE <= TRUNC(SYSDATE) - 180)) F
		where A.ACCOUNT_NUMBER = B.ACCOUNT_NUMBER
		AND B.INVESTOR_LOAN_NO = F.FNMA_LN
		AND (B.PAYOFF_DATE >= '1/1/2014' OR B.PAYOFF_DATE IS NULL)
	);
COMMIT;

CREATE TABLE AT_DQ_HIST2
(
MTH VARCHAR(10),
PORTFOLIO VARCHAR(20),
DELQ_STATUS VARCHAR(30),
NO_OF_LOANS NUMBER
);
COMMIT;

SET SERVEROUTPUT ON

DECLARE
vdate1 date;
vdate2 date;
vdate3 date;
vcnt number default 1;

CURSOR C1 IS
		select trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1) as mth_fst_date,
		add_months(trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1),-1) as prior_fst_date,
		add_months(trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1),+1) as next_fst_date,
		cast(to_char(payoff_date,'MM') as number) as mth,
		count(*) as cnt
		from at_dq_hist
		where payoff_date >= '2/1/2014'
		group by trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1),
		add_months(trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1),-1),
		add_months(trunc(payoff_date) - (to_number(to_char(payoff_date,'DD')) - 1),+1),
		cast(to_char(payoff_date,'MM') as number)
		order by 1
;

BEGIN

FOR N in C1
LOOP
vdate1 := N.MTH_FST_DATE;
vdate2 := N.PRIOR_FST_DATE;
vdate3 := N.NEXT_FST_DATE;
vcnt := N.MTH;

		INSERT INTO AT_DQ_HIST2
		SELECT
		TO_CHAR(vdate1,'MM-YYYY') AS MTH,
		PORTFOLIO,
		CASE WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate2 AND PAYOFF_DATE < vdate1)
		          THEN '01 - Current - Paidoff'

			WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) IS NULL) AND
		         ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '02 - Current - Current'

			WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) > 0) AND
		         ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '03 - Current - Delq'

		  	WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate2 AND PAYOFF_DATE < vdate1)
		          THEN '04 - Delq - Paidoff'

		 	WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) IS NULL) AND
		          (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		         THEN '05 - Delq - Current'

		  	WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) > 0) AND
		          (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '06 - Delq - Delq'

		ELSE 'Prior PO' END AS DELQ_STATUS,
		COUNT(*) AS NO_OF_LOANS

		FROM AT_DQ_HIST
		--WHERE  (PAYOFF_DATE >= vdate3 OR PAYOFF_DATE IS NULL)

		GROUP BY
		TO_CHAR(vdate1,'MM-YYYY'),
		PORTFOLIO,
		CASE WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate2 AND PAYOFF_DATE < vdate1)
		          THEN '01 - Current - Paidoff'

			WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) IS NULL) AND
		         ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '02 - Current - Current'

			WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) > 0) AND
		         ((LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) IS NULL) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '03 - Current - Delq'

		  	WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate2 AND PAYOFF_DATE < vdate1)
		          THEN '04 - Delq - Paidoff'

		 	WHEN ((LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) IS NULL OR LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) = 1) AND LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) IS NULL) AND
		          (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		         THEN '05 - Delq - Current'

		  	WHEN (LENGTH(REPLACE(SUBSTR(STR,vcnt,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+6,6),'0','')) > 0) AND
		          (LENGTH(REPLACE(SUBSTR(STR,vcnt-1,12),'0','')) > 1 OR LENGTH(REPLACE(SUBSTR(STR,vcnt+5,6),'0','')) > 0) AND
		         (PAYOFF_DATE >= vdate1 OR PAYOFF_DATE IS NULL)
		          THEN '06 - Delq - Delq'

		ELSE 'Prior PO' END;

	COMMIT;

END LOOP;
END;
/

SELECT * FROM AT_DQ_HIST2;
