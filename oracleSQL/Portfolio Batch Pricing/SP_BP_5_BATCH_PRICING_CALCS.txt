PROCEDURE CSRG_PROD.SP_BP_5_BATCH_PRICING_CALCS
IS
--
-- OBJECTIVE:                       5-BATCH_PRICING_CALCS.sql
-- PURPOSE:                         To replace 5-BATCH_PRICING_CALCS.sql script
-- MODIFICATION HISTORY
-- Person           Date            Comments
-- ==============   ==============  ===================================================================================
-- E.Falkov         11/14/2017      Original Version...
-- ==============   ==============  ===================================================================================

v_prc_nm               VARCHAR2(30)    := 'SP_BP_5_BATCH_PRICING_CALCS';
v_count                VARCHAR2(100);
v_err_msg              VARCHAR2(4000);
v_ddl_smt              VARCHAR2(32676) := NULL;
v_tab_owner            VARCHAR2(100)   :='CSRG_PROD';
v_tab1_name            VARCHAR2(100)   :='BPO_TMP_CALCS';
v_cur_build_table            VARCHAR2(100)   := NULL;      --'BATCH_PRICING_OUTPUT';
v_exec_status_id       NUMBER          := NULL;
v_exec_status_txt      VARCHAR2(4000)  := NULL;
v_job_run_id           NUMBER          := 0;
v_job_name             VARCHAR2(40)    := 'SP_BP_5_BATCH_PRICING_CALCS';
v_build_synonym        VARCHAR2(30)    := 'BATCH_PRICING_OUTPUT_BUILD';
v_prod_synonym         VARCHAR2(30)    := 'BATCH_PRICING_OUTPUT';
v_cur_prod_table           VARCHAR2(30)    := NULL;

v_exec_segment_timestamp        TIMESTAMP WITH TIME ZONE:= SYSTIMESTAMP;  
v_exec_total_segment_timestamp  TIMESTAMP WITH TIME ZONE:= SYSTIMESTAMP;   
v_runtime                       VARCHAR2(50):=NULL;

BEGIN 
v_exec_status_id:=0;
v_exec_status_txt:='SUCCESS';
v_exec_total_segment_timestamp := SYSTIMESTAMP;

-- Get current table name for Build Synonym
v_cur_build_table := F_GET_PUB_SYNONYM_TABLE_NAME(v_build_synonym);

--Get current prod table
v_cur_prod_table := F_GET_PUB_SYNONYM_TABLE_NAME(v_prod_synonym);

-- Known issues and questions
-- 1. need cashout amount on input file and write it to output file
-- 3. Old rate is like .0475 and new rate is like 4.75
-- 4. Carryover MI:  could be it should be recalc'd yearly or not.  If fixed, some policies fix it for 10 years
--        then recalc after year 10 at a lower rate.  Per Sue Young on 8/30/2013, this info is not available
--        from GT servicing so we will assume for APR calc that Carry Over MI is flat until dropped and not recalc'ed.


--------------------------------------------------------------------------------------------------------------
-- Step 1a:  Create or truncate the table STONE_QC which will contain the QC records.


INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1a:   New payment and APR calculations',null,null,null); -- logfile entry
COMMIT;


   

/*  --  Source of formulas for mortgage calculations
http://www.amortizationer.com/amortization-formula.html
http://www.ultimatecalculators.com/future_value_savings_calculator.html

Let P be the monthly payment amount you have to pay
Let N be the number of monthly payments (installments)
Let I be the annual interest rate
Let A be the amount borrowed
Let R = (1 + I/12) which is only used to simplify the formula/calculation

Amount (A):     A = P * ( 1 - R-T ) / ( R - 1 )

Term(N):           N = -ln [ 1 - A ( R - 1 ) / P ] / ln[ R ]

Payoff (or balloon) (P[T]):
                P[nTerm] = (A - P * ( 1 - R-T ) / ( R - 1 ) ) Rn

Amount owed after T payment (A[T]):
                R = (1 + I/12) which is only used to simplify the formula/calculation
                A[T] = ( A - P * ( 1 - R-(T-1) ) / ( R - 1 ) ) R(T-1) - P

Number of payments to get to a future balance:
                Nfv = log ( Pmt + (FV * I) / (PMT + (PV * I) )  /  log ((1+I)
*/


   
--------------------------------------------------------------------------------------------------------------
-- Step 1b:  Define the variables to be used



DECLARE

    v_progress_interval NUMBER DEFAULT 250000;-- Record interval for writing progress records to log file
    -- variables to carry values from BPO
    nAccount            VARCHAR2(20);
    nTransaction        VARCHAR2(30);
    nNewProduct         VARCHAR2(30);
    nRate               NUMBER;
    nTerm               NUMBER;
    nLoanAmt_B4_UFMIP   NUMBER;
    nLoanAmt            NUMBER;
    nCurMIType          VARCHAR2(10);
    nCurMIAmt           NUMBER;
    nAPR                NUMBER;

    -- variables for the new QC calcs
    cRateMo             NUMBER;
    cRateMoOld          NUMBER;
    cPmt                NUMBER;
    cAPR                NUMBER;
    vPROP_VAL           NUMBER;
    cPtsDol             NUMBER;
    cInterimInt         NUMBER;
    cBaseFees           NUMBER;
    cTotFees            NUMBER;
    cLTV                NUMBER;
    cUFMIP_Pct          NUMBER;
    cUFMIP_Amt          NUMBER;
    cMI_Pct             NUMBER;
    cMI_Amt             NUMBER;
    cMI_CarryOver_Flag  VARCHAR(1);
    cMI_Annual_Recalc_Flag      VARCHAR(1);
    cMI_ELIM_BAL_NEW            NUMBER;
    cMI_ELIM_MOS_NEW            INTEGER;
    cMI_ELIM_MOS_MIN            INTEGER; -- Min # of months that MI must be paid before it can be dropped
    cMI_ELIM_BAL_OLD            NUMBER;  -- Used to estimate total of future MI payments on cur loan for LOL savings calc
    cMI_ELIM_MOS_OLD            INTEGER;  -- Used to estimate total of future MI payments on cur loan for LOL savings calc

    -- array to hold the series of payments for the APR Present Value iterations
    type vPMT_ARRAY_TYPE     is table of NUMBER INDEX BY PLS_INTEGER;
    v_pmt_amt_array     vPMT_ARRAY_TYPE;
    type array_integer_50     is table of INTEGER INDEX BY PLS_INTEGER;
    type array_number_50     is table of NUMBER INDEX BY PLS_INTEGER;
    a_starting_mo            array_integer_50;
    a_ending_mo              array_integer_50;
    a_num_pmts               array_integer_50;
    a_rate_mo                array_number_50;
    a_pmt_pimi               array_number_50;

    vR                    NUMBER;  -- used for temp calc
    v_series_ctr          INTEGER;
    v_num_pmt_series      INTEGER;
    v_mo_start            INTEGER;
    v_mo_end              INTEGER;
    v_num_pmts            INTEGER;
    v_mo_mi_recalc        INTEGER;
    v_mo_arm_adjust       INTEGER;

    -- below are used for IRR calc
    vStartTime            DATE DEFAULT SYSDATE;
    vIntervalTime         DATE;
    vRecCtr               NUMBER DEFAULT 0;
    vRecCtrPrior          NUMBER DEFAULT 0;
    v_rate                NUMBER;
    v_pmt                 NUMBER; -- monthly payment (either intial or after ARM adjustment
    v_interest_pmt        NUMBER; -- interest portion of monthly payment
    v_sum_pmts            NUMBER; -- sum of all PI plus MI payments
    v_c0                  NUMBER; -- negative value from table
    v_cashflow            NUMBER; -- used to QC APR calc
    v_balance             NUMBER; -- the balance at beginning of each period
    v_balance_ending      NUMBER; -- the balance at end of each period
    v_avg_balance_yr      NUMBER; -- the average balance during the anniversary year (used for FHA MI)
    v_mi                  NUMBER; -- declining monthly MI amount (reduces each year)
    v_tmp                 NUMBER; --store (1+r)^n
    v_count               NUMBER := 0; --iteration count
    v_max_iteration       NUMBER  DEFAULT 10;  -- max # IRR iterations
    v_max_iter_act_sim    NUMBER;  -- logs maximum number of iterations - simple method
    v_max_iter_act_com    NUMBER;  -- logs maximum number of iterations - complex method
    v_APR_guess_prior     NUMBER;
    v_APR_guess           NUMBER;
    v_APR_guess_next      NUMBER;
    v_APR_long_method     NUMBER;
    v_pmt_guess           NUMBER;
    v_precision           NUMBER DEFAULT 5;
    v_npv_series_now      NUMBER;
    v_npv_series_start    NUMBER;
    v_npv                 NUMBER; --store npv with negative value
    v_npv_nin             NUMBER; --store npv without negative value
    v_npv_prior           NUMBER;
    v_log                 NUMBER; --store log(A/|C0|) / log(A/NPV1,in)
    v_APR_method          VARCHAR(20);
    v_APR_iterations      NUMBER; --counts # APR iterations needed for each record..is writing to results table
    -- Determines whether the short or long version is used for APR calc for irregular payment streams
    --v_APR_COMPLEX_METHOD VARCHAR(10) DEFAULT 'SHORT';
    --v_APR_COMPLEX_METHOD VARCHAR(10) DEFAULT 'SHORT';
    --v_APR_COMPLEX_METHOD VARCHAR(10) DEFAULT 'BOTH';


--------------------------------------------------------------------------------------------------------------
-- Step 1c:  Define a cursor and load with the records to be QC'd

-- Ask Brad why this fails here: INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5','Step 1b:  Load the cursor',null,null); -- logfile entry

CURSOR C1 IS
    SELECT     BPI.*,

            case when BPI.CUR_MI_TYPE = 'BPMI' and BPI.CUR_MI_AMOUNT<1000 then NVL(BPI.CUR_MI_AMOUNT,0)
                 when BPI.CUR_MI_TYPE = 'LPMI' and NVL(BPI.CUR_MI_AMOUNT,0)/BPI.UNPAID_BALANCE<.001 then NVL(BPI.CUR_MI_AMOUNT,0)
                 else 0 end as CUR_MI,
            case when BPI.NEW_PRODUCT LIKE '%JUMBO%' then 'Y' else 'N' end as NEW_JUMBO_FLAG,
            case when BPI.CURRENT_PROPERTY_VALUE>10 then round(BPI.LOAN_AMT/BPI.CURRENT_PROPERTY_VALUE,4) else 0 end as NEW_LTV,
            case when BPI.CURRENT_PROPERTY_VALUE>10 then round(BPI.UNPAID_BALANCE/BPI.CURRENT_PROPERTY_VALUE,4) else 0 end as CUR_LTV
    FROM
            BATCH_PRICING_INPUT BPI WHERE
              BPI.LOAN_AMT>10000
              and BPI.UNPAID_BALANCE>10000
              and BPI.NEW_RATE>0
;
            -- Test/QC Filters below
              -- and NEW_PRODUCT not like '%FHA%'
              --and NEW_PRODUCT='20 YR FIXED HASP'
              --and BPI.ACCOUNT_NUMBER='68585272'
              --and ROWNUM <= 100000
              --and ROWNUM <= 10000
              --and BPI.ACCOUNT_NUMBER ='62253158'
              --and BPI.ACCOUNT_NUMBER in ('62133432','62343485')
              --and BPI.CUR_MI_TYPE = 'BPMI' and BPI.CUR_MI_AMOUNT between 10 and 1000 and round(BPI.LOAN_AMT/BPI.CURRENT_PROPERTY_VALUE,3)>.9
              --and BPI.CUR_MI_TYPE is null and NVL(BPI.CUR_MI_AMOUNT,0) =0-- between 10 and 1000
              --and BPI.NEW_TERM=360
              --and BPI.CURRENT_PROPERTY_VALUE>50000
              -- ERROR ON RECORD: 62253158  RATE TERM REFINANCE   30 YR FIXED HASP
              -- and substr(BPI.ACCOUNT_NUMBER,4,3)='321'





---------------------------------------------------------------------------------------------------------------
-- Step 2:  Begin processing and loop thru each record to be QC'd ----------

--Ask Brad why this failes here:  INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5','Step 1c:  Begin Calculations',null,null); -- logfile entry
--COMMIT;

BEGIN


--DBMS_OUTPUT.put_line ('Checkpoint A'||' Line #: ' || $$plsql_line); --********************************************

vIntervalTime := SYSDATE; -- Start time for measuring records/second processing speed

--  Loop thru every record on input file and perform calculations

INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1b:   Load and loop through the cursor C1',null,null,null); -- logfile entry


-- ==========================================================================================================================================
EXECUTE IMMEDIATE 'TRUNCATE TABLE CSRG_PROD.BPO_TMP_CALCS DROP STORAGE'; 

v_ddl_smt:='ALTER TABLE '||v_tab_owner||'.'||v_tab1_name||' NOLOGGING';
EXECUTE IMMEDIATE v_ddl_smt;

INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1b:   Truncating BPO_TMP_CALCS',null,null,null); -- logfile entry


COMMIT;

-- ==============================================================================================================
-- Disable BPO_TMP_CALCS  Constraints: 
-- ==============================================================================================================
PKG_UTL_OBJMAINTENANCE.prc_disable_idx_constr_trig
   (p_exec_status_id             => v_exec_status_id, 
    p_exec_status_txt            => v_exec_status_txt,  
    p_called_by                  => v_prc_nm,  
    p_owner                      => v_tab_owner, -- CSRG_PROD
    p_tab_name                   => v_tab1_name,  
    p_disable_pk_yn              => 'Y', 
    p_disable_unq_yn             => 'Y', 
    p_disable_chk_yn             => 'N', 
    p_disable_fk_yn              => 'N', 
    p_disable_trig_yn            => 'N',
    p_disable_pk_idx             => 'N',
    p_disable_unq_idx            => 'N',
    p_disable_part_idx           => NULL,  
    p_disable_subpart_idx        => NULL,  
    p_disable_other_idx          => 'Y',
    p_part_idx_sch_pattern       => NULL,  
    p_subpart_idx_sch_pattern    => NULL,
    p_job_name                   => v_job_name,
    p_job_run_id                 => v_job_run_id   
   ); 

INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1b:   Truncate BPO_TMP_CALCS Completed',null,null,null); -- logfile entry


COMMIT;

FOR N IN C1
LOOP
--DBMS_OUTPUT.put_line ('Checkpoint A2'||' Line #: ' || $$plsql_line); --********************************************

    vRecCtr:=vRecCtr+1;
    v_APR_long_method:=null; -- used to compare results from APR Methods...remembers value from long method..reset to null
    nAccount:=N.ACCOUNT_NUMBER;
    nTransaction:=N.TRANSACTION;
    nNewProduct:=N.NEW_PRODUCT;

    -- Write out progress record to log file
    IF vRecCtr/v_progress_interval=trunc(vRecCtr/v_progress_interval) THEN
        
        INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1c:  Calculating...'||ROUND((vRecCtr-vRecCtrPrior) / GREATEST(.1,(84600*(SYSDATE-vIntervalTime))),1) ||' recs/sec',
                    vRecCtr,null,null); -- logfile entry
        --COMMIT;
        vRecCtrPrior := vRecCtr;
        vIntervalTime := SYSDATE;
    END IF;

--DBMS_OUTPUT.put_line ('Checkpoint A'||' Line #: ' || $$plsql_line); --********************************************
    ---------- Load variables with basic transaction info (loan amt, term, rate, etc from BPO ----------
    nLoanAmt_B4_UFMIP    := N.LOAN_AMT;
    nTerm                := N.NEW_TERM;
    cRateMo                := N.NEW_RATE/1200;
    cRateMoOld           := round(N.INTEREST_RATE/12,10);
    vR                   := (1+cRateMo);  -- temp variable used to simplify formulas
    vPROP_VAL            := N.CURRENT_PROPERTY_VALUE;  -- temp variable used to shorten formulas
     nCurMIType            := N.CUR_MI_TYPE;
    nCurMIAmt            := N.CUR_MI;
    cLTV                 := N.NEW_LTV;

    cUFMIP_Pct            := case when N.NEW_UFMIP_PCT = 0 then 0 else N.NEW_UFMIP_PCT/100 end;
    cUFMIP_Amt            := ROUND( cUFMIP_Pct * N.LOAN_AMT,0); -- Upfront MI Amount for FHA loans
    nLoanAmt              := nLoanAmt_B4_UFMIP+cUFMIP_Amt;  -- loan amount including upfront MI, if any (FHA loans)
    cMI_CarryOver_Flag    := 'N' /*case when N.NEW_PRODUCT like '%HASP%' and CLTV>.80 and N.CUR_MI>0 and N.CUR_MI_TYPE in ('BPMI','LPMI')
                                then 'Y' else 'N' end*/;   -- 'Y' if MI amount is carried over from current loan
    cMI_Annual_Recalc_Flag        := case when N.MORT_TYP = 'FHA' or N.NEW_PRODUCT like ('%BPMI%') or (N.NEW_PRODUCT LIKE ('%HASP%') and N.NEW_MIP_PCT  > 0)
                                    then 'Y' else 'N' end; -- 'Y' if Monthly MI payment is recalc'd each year
    cMI_Pct                := case-- Monthly MI payment percent
                            when cMI_CarryOver_Flag='Y' then ROUND(12*N.CUR_MI/N.LOAN_AMT,6)
                            else case when N.NEW_MIP_PCT  = 0 then 0 else N.NEW_MIP_PCT/100
                                end
                            end ;
    cPmt := CEIL( 100* nLoanAmt * ( vR - 1 ) / ( 1 - POWER(vR,(-nTerm)) ) )/100;-- Rounds up to next whole cent

    -- Monthly MI payment amount (for non-FHA, it will be either MI on the current loan if LTV is over 80%

                    v_avg_balance_yr:=     case when N.MORT_TYP = 'FHA' or N.NEW_PRODUCT like ('%BPMI%') or (N.NEW_PRODUCT LIKE ('%HASP%') and N.NEW_MIP_PCT  > 0)
                        then ROUND( ( nLoanAmt
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 1)))  /  (vR-1)    ) * POWER(vR,( 1)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 2)))  /  (vR-1)    ) * POWER(vR,( 2)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 3)))  /  (vR-1)    ) * POWER(vR,( 3)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 4)))  /  (vR-1)    ) * POWER(vR,( 4)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 5)))  /  (vR-1)    ) * POWER(vR,( 5)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 6)))  /  (vR-1)    ) * POWER(vR,( 6)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 7)))  /  (vR-1)    ) * POWER(vR,( 7)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 8)))  /  (vR-1)    ) * POWER(vR,( 8)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-( 9)))  /  (vR-1)    ) * POWER(vR,( 9)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-(10)))  /  (vR-1)    ) * POWER(vR,(10)),2)
                                     + ROUND( ( nLoanAmt - cPmt * (1- POWER(vR,-(11)))  /  (vR-1)    ) * POWER(vR,(11)),2)
                                     )/12 , 0) else 0 end;

    -- Monthly MI payment amount (for non-FHA, it will be either MI on the current loan if LTV is over 80%
    --AT added condition for PMI setting it to original loan amount multiplied by PMI rate which would change if PMI goes beyond 10 yrs
    cMI_Amt := case when N.MORT_TYP = 'FHA' then round( ( v_avg_balance_yr * cMI_Pct/12 )/ (1+cUFMIP_Pct) ,2)
                    when (N.NEW_PRODUCT like ('%BPMI%') or (N.NEW_PRODUCT LIKE ('%HASP%') and N.NEW_MIP_PCT  > 0)) then round( ( nLoanAmt * cMI_Pct/12 )/ (1+cUFMIP_Pct) ,2)
                     when cMI_CarryOver_Flag='Y' then N.CUR_MI
                     else 0 END;


    cPtsDol                := round( N.LOAN_AMT * N.NEW_POINTS_PCT/100,2);    -- Points
    cInterimInt            := round( (0/360) * nLoanAmt * N.NEW_RATE/100    ,2);        -- Interim Interest - CHANGED TO ZERO BY AT ON 9/27/2013
    cBaseFees              := N.ORIGINATION_FEE;        -- Base fees - CHANGED TO BE PULLED FROM BATCH_PRICING_PRODUCTS BY AT ON 9/26/2013
    cTotFees               := case when N.MORT_TYP = 'VA' then (cBaseFees + cPtsDol + cInterimInt + cUFMIP_Amt) else (cBaseFees + cPtsDol + cInterimInt) end;

--DBMS_OUTPUT.put_line ('Checkpoint B'||' Line #: ' || $$plsql_line); --********************************************

    --Calculate Monthly Pmt: P = A * ( R - 1 ) / ( 1 - R^-T )



    --Calc Term: T = -ln [ 1 - A ( R - 1 ) / P ] / ln[ R ]
    --Do not need this calc as new term (# months) is provided from prior steps
    --cTerm := ROUND( -ln ( 1 - nLoanAmt * ( vR - 1 ) / cPmt ) / LN( vR )   ,0);

    -- Calculate the balance and # months until MI can be dropped (assumes when LTV gets down to 78% only for CURRENT MI and not FHA)
    cMI_ELIM_BAL_NEW    := case when cMI_Amt>0  and cLTV>.78 and N.MORT_TYP <> 'FHA'
                            then ROUND(.78 *  N.CURRENT_PROPERTY_VALUE,0)
                            else 0 END;
--DBMS_OUTPUT.put_line ('Checkpoint C'||' Line #: ' || $$plsql_line); --********************************************

    -- Calculate the # payments to reach a specific balance:
    -- NPmts = log ( Pmt + (FV * I) / (PMT + (PV * I) )  /  log ((1+I)
    -- If MI will be paid, for FHA it is over the life of loan if LTV >=90 else it is 11 yrs
    --         This 60 month min. does NOT apply to carryover MI on HARP Refis
    cMI_ELIM_MOS_MIN    := case when N.MORT_TYP = 'FHA' then case when N.LTV > 90 then N.NEW_TERM else 132 end
                             when cMI_CarryOver_Flag='Y' then 0
                             else 0 end;

    cMI_ELIM_MOS_NEW    := case when cMI_Amt>0   and cLTV>.78 and N.MORT_TYP <> 'FHA'
                            then LEAST(nTerm, GREATEST(cMI_ELIM_MOS_MIN,  -- At least 5 yrs, if FHA, but never more than loan term
                                    CEIL(     log(10, (-cPmt + cMI_ELIM_BAL_NEW * cRateMo) / (-cPmt + nLoanAmt * cRateMo) ) / log(10, 1+cRateMo) ) ) )
                            else cMI_ELIM_MOS_MIN end;


    -- Calculate MI elimination months on the current loan...needed for life of loan savings calc.  Applies to BPMI only
    cMI_ELIM_BAL_OLD    := 0/*case when N.CUR_MI_TYPE='BPMI' and N.CUR_MI>0 and N.CUR_LTV>.78
                            then ROUND(.78 *  N.CURRENT_PROPERTY_VALUE,0)
                            else 0 END*/;

    cMI_ELIM_MOS_OLD    := 0/*CASE WHEN N.CUR_MI_TYPE='BPMI' AND N.CUR_MI>0  AND N.CUR_LTV>.78 THEN
                                    CASE WHEN (N.UNPAID_BALANCE * N.INTEREST_RATE/12)/N.PRINCIPAL_AND_INTEREST > 0.95
                                             THEN N.ADJ_REMAINING_TERM
                                         ELSE    CEIL(     LOG(10, (-N.PRINCIPAL_AND_INTEREST + CMI_ELIM_BAL_OLD * cRateMoOld)
                                                    / (-N.PRINCIPAL_AND_INTEREST + N.UNPAID_BALANCE * cRateMoOld) ) / LOG(10, 1+cRateMoOld) )
                                    END
                                ELSE 0
                            END*/;


--    DBMS_OUTPUT.put_line('');
--    DBMS_OUTPUT.put_line('');
--    DBMS_OUTPUT.put_line('===========================');
--    DBMS_OUTPUT.put_line(N.ACCOUNT_NUMBER||'  '||N.TRANSACTION||'   '||N.NEW_PRODUCT||' ART:'||N.ADJ_REMAINING_TERM);
--    DBMS_OUTPUT.put_line ('       Prop Value: ' || N.CURRENT_PROPERTY_VALUE);
--    DBMS_OUTPUT.put_line ('      Current UPB: ' || N.UNPAID_BALANCE );
--    DBMS_OUTPUT.put_line ('      Current LTV: ' || N.CUR_LTV );
--    DBMS_OUTPUT.put_line ('       Current PI: ' || N.PRINCIPAL_AND_INTEREST );
--    DBMS_OUTPUT.put_line ('     Current Rate: ' || 1200*cRateMoOld );
--  DBMS_OUTPUT.put_line ('  Current MI Type: ' || nCurMIType);
--  DBMS_OUTPUT.put_line ('Current MI Amount: ' || nCurMIAmt);
--    DBMS_OUTPUT.put_line ('  Cur MI Elim Bal: ' || cMI_ELIM_BAL_OLD );
--  DBMS_OUTPUT.put_line ('     MI Carryover: ' || cMI_CarryOver_Flag);
--    DBMS_OUTPUT.put_line ('    Carry Over MI: ' || N.CUR_MI );
--    DBMS_OUTPUT.put_line ('');
--  DBMS_OUTPUT.put_line ('   New Term (mos): ' || nTerm);
--  DBMS_OUTPUT.put_line (' New Initial Rate: ' || N.NEW_RATE);
--    DBMS_OUTPUT.put_line ('New UPB(wo UFMIP): ' || nLoanAmt_B4_UFMIP);
--    DBMS_OUTPUT.put_line ('          New LTV: ' || cLTV|| ' before UFMIP' );
--  DBMS_OUTPUT.put_line ('     UFMIP Amount: ' || cUFMIP_Amt);
--    DBMS_OUTPUT.put_line (' New UPB(w/UFMIP): ' || nLoanAmt);
--    DBMS_OUTPUT.put_line ('       New Mo Pmt: ' || cPmt || ' (initial)');
--    DBMS_OUTPUT.put_line ('      New Mo MI %: ' || cMI_Pct);
--    DBMS_OUTPUT.put_line ('      New Mo MI $: ' || cMI_Amt);
--    DBMS_OUTPUT.put_line (' Annual MI Recalc: ' || cMI_Annual_Recalc_Flag);
--    DBMS_OUTPUT.put_line (' New Min Elim Bal: ' || cMI_ELIM_MOS_NEW);
--    DBMS_OUTPUT.put_line (' New Min Elim Mos: ' || cMI_ELIM_MOS_MIN);
--    DBMS_OUTPUT.put_line (' New Min Elim Mos: ' || cMI_ELIM_MOS_NEW);
--  DBMS_OUTPUT.put_line ('     New Points %: ' || N.NEW_POINTS_PCT);
--  DBMS_OUTPUT.put_line ('     New Points $: ' || cPtsDol);
--  DBMS_OUTPUT.put_line ('New Interim Int $: ' || cInterimInt);
--  DBMS_OUTPUT.put_line ('  New Base Fees $: ' || cBaseFees);
--  DBMS_OUTPUT.put_line (' New Total Fees $: ' || cTotFees);



    -------------  Begin APR Calculation Section ----------------

    -- Below are two methods of calculating APR
    -- Products with irregular payment streams like FHA or other loans with MI as well as ARM's require a more complex
    -- APR calculation method using the entire amortization schedule

    IF N.MORT_TYP = 'FHA' or  N.NEW_PRODUCT like '%ARM%' or N.NEW_PRODUCT like ('%BPMI%') or (N.NEW_PRODUCT LIKE ('%HASP%') and N.NEW_MIP_PCT  > 0) or cMI_Amt>0 THEN
        GOTO CALC_APR_COMPLEX_SHORT;
    END IF;


    --  Simple APR Method for products where the payment is the same over the life of the loan.
    --  Newton's Method: http://oakroadsystems.com/math/loan.htm#LoanInterest
    --  This method typically takes 2-4 iterations until the rate, rounded to 2 decimal places, doesn't change

    v_APR_method := 'Simple';
    v_sum_pmts      := nTerm*cPmt;
    -- Below attempts to get a good starting estimate to minimize the number of iterations.
    -- Starting guess/APR is also very sensitive to TOTAL_FEE_AMOUNT as % of NEW_LOAN_AMOUNT, so could improve this by
    -- incorporating a factor for that as well.
--    v_APR_guess  := case when nTerm=120 then cRateMo * 1.237
--                         when nTerm=180 then cRateMo * 1.150
--                         when nTerm=240 then cRateMo * 1.087
--                         when nTerm=360 then cRateMo * 1.055
--                         else cRateMo * 1.050 end;

    v_APR_guess  := cRateMo * ( 1  +  ( cTotFees / nLoanAmt)
                                *  case when nTerm=360 then 1.915
                                        when nTerm=240 then 2.602
                                        when nTerm=180 then 3.386
                                        when nTerm=120 then 4.862
                                        else 2 end);

    --DBMS_OUTPUT.put_line( ' cTotFees: '||cTotFees||'   N.NEW_LOAN_AMOUNT: '||N.NEW_LOAN_AMOUNT);
    --DBMS_OUTPUT.put_line( ' nTerm: '||nTerm||'   cRateMo: '||cRateMo||'   v_APR_guess:'||v_APR_guess);

FOR v_iteration_ctr in 1 .. v_max_iteration LOOP
       v_APR_iterations := v_iteration_ctr;
       v_APR_guess_next :=v_APR_guess - (
                          (cPmt  - cPmt * POWER(1 + v_APR_guess,-nTerm )    - v_APR_guess * (nLoanAmt-cTotFees) ) /
                          (nTerm * cPmt * POWER(1 + v_APR_guess,-nTerm-1 )  - (nLoanAmt-cTotFees) ) );
      -- dbms_output.put_line('    v_APR_guess: '|| v_APR_guess ||'    v_APR_guess_next: '||v_APR_guess_next  );

        -- Exit when prior and new APR guesses are the same rounded to 2 decimal places
        EXIT WHEN ROUND(1200*v_APR_guess,2) = ROUND(1200*v_APR_guess_next,2);

        -- Limit next guess to between 0 and 30% annualized tp avoid errors
        v_APR_guess := GREATEST( 0, LEAST( 30/1200, v_APR_guess_next));
END LOOP;

    GOTO CALC_APR_END;



    <<CALC_APR_COMPLEX_SHORT>> ------------------------------------------------

    --  Complex Short APR Method requires calculating each unique series of payment streams then calculating
    --  the Net Present Value of each stream using a rate guess and then revising until the NPV of the payment stream is $0
    --  Because the final payment is usually slightly different, it is in a separate series of 1 payment
    --  For example for an 5/1 ARM loan:  60 payments of $1000 at 4%, then 299 payments at $900 at 3.75%, then 1 final payment of $893


    --  First create a memory array containing the loan cashflow (payment + MI)
    --  Also, prepare other variables with values that will be used in next step (e.g. sum of all payments)

    v_APR_method    := 'Complex-Short';
    v_balance        := nLoanAmt;
    v_mi            := cMI_Amt;
    v_sum_pmts        := 0;
    v_pmt            := cPmt;
    v_rate            := cRateMo;
    v_mo_start        := 1;

    -- Determine first month that MI pmt changes, if any
    v_mo_mi_recalc    := case when NVL(cMI_ELIM_MOS_NEW,0)=0 then 999 -- No MI
                            when cMI_Annual_Recalc_Flag='Y' then least(12,cMI_ELIM_MOS_NEW) --  FHA MI to be recalc'd annually
                            when cMI_CarryOver_Flag='Y' then cMI_ELIM_MOS_NEW  -- Carry over MI assumed fixed until eliminated
                            -- Unknown case...need some error logging here
                            else 999 end;
    v_mo_arm_adjust    :=case when NVL(N.FIRST_ADJ,0)=0 then 999 else N.FIRST_ADJ end;

    FOR v_series_ctr IN 1 .. 50   LOOP--  Load the memory arrays with info about each payment series
   
        v_num_pmt_series            :=v_series_ctr;

        -- Below are not used. These apply only if we need to get the amount of the final payment.  We have decided
        -- not to account for the slight difference in the final payment amount due to rounding...it is only a couple dollars
        --v_mo_end                    := least(v_mo_mi_recalc,v_mo_arm_adjust,case when v_mo_start=nTerm then nTerm else nTerm-1 end);
        --v_interest_pmt            := round(v_rate*v_balance,2);  -- interest portion of this months payment
        --v_pmt                        := least( v_pmt , v_balance+v_interest_pmt);  -- assures last payment is not more than remaining balance

        v_mo_end                    := least(v_mo_mi_recalc,v_mo_arm_adjust,nTerm);
        v_num_pmts                    := v_mo_end - v_mo_start + 1;
        v_sum_pmts                    := v_sum_pmts +  v_num_pmts * ( v_pmt + v_mi );

        a_starting_mo(v_series_ctr)    := v_mo_start;
        a_ending_mo(v_series_ctr)    := v_mo_end;
        a_num_pmts(v_series_ctr)    := v_num_pmts;
        a_pmt_pimi(v_series_ctr)    := v_pmt + v_mi;

        --DBMS_OUTPUT.put_line(' Loan Pmt Series:'||v_series_ctr||' Start mo: '||v_mo_start||' End mo: '||v_mo_end||'  Amt: '||a_pmt_pimi(v_series_ctr));

        EXIT WHEN v_mo_end = nTerm;  --exit loop at end of last series

        -- now recalc values for next series of payments
        v_mo_start  := v_mo_end + 1;

        -- Amt owed after 'n' pmts is starting balance for next series. This series starting balance is needed
        --   for both ARM resets (calc new pmt) and annual MI amount recalc's (for FHA loans)
        --  As this is a heavy calc, only do it when required below.
        -- http://www.amortizationer.com/amortization-formula.html
        -- P[n] = ( A - P * ( 1 - R^-(n-1) ) / ( R - 1 ) ) * R^(n-1)  where R = (1 + I/12), A=UPB, P=payment

        -- MI Recalculate
        IF v_mo_end = v_mo_mi_recalc THEN
            IF v_mo_end = cMI_ELIM_MOS_NEW  THEN
                -- if MI no longer needed, set monthly MI pmt to 0 and recalc month to never
                v_mi            := 0;
                v_mo_mi_recalc    := 999;
             elsif cMI_Annual_Recalc_Flag='Y' THEN

                --- START FHA MI UPDATE

                -- For FHA MI, annually recalc pmt using the remaining loan balance and MI percent
                --    Amount owed after T payment (A[T]):
                --    R = (1 + I/12) which is only used to simplify the formula/calculation
                --    A[T] = ( A - P * ( 1 - R-(T-1) ) / ( R - 1 ) ) R(T-1) - P

                vR                 := (1+ v_rate);
                v_balance         := ROUND( ( v_balance - v_pmt * (1- POWER(vR,-(v_num_pmts)))  /  (vR-1)    ) * POWER(vR,(v_num_pmts)),2);


                -- FHA monthly MI payment amount is calc'd at the beginning of each anniversary year on the average balances for each month of that year.
                v_avg_balance_yr:= ROUND( (v_balance
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 1)))  /  (vR-1)    ) * POWER(vR,( 1)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 2)))  /  (vR-1)    ) * POWER(vR,( 2)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 3)))  /  (vR-1)    ) * POWER(vR,( 3)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 4)))  /  (vR-1)    ) * POWER(vR,( 4)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 5)))  /  (vR-1)    ) * POWER(vR,( 5)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 6)))  /  (vR-1)    ) * POWER(vR,( 6)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 7)))  /  (vR-1)    ) * POWER(vR,( 7)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 8)))  /  (vR-1)    ) * POWER(vR,( 8)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-( 9)))  /  (vR-1)    ) * POWER(vR,( 9)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-(10)))  /  (vR-1)    ) * POWER(vR,(10)),2)
                                     + ROUND( ( v_balance - v_pmt * (1- POWER(vR,-(11)))  /  (vR-1)    ) * POWER(vR,(11)),2)
                                     )/12 , 0);

                v_mo_mi_recalc    := least(v_mo_end+12,cMI_ELIM_MOS_NEW);
                -- FHA monthly MI is also based on the UPB adjusted to exclude/reduce for any UFMIP that was financed.
                --AT modified the statment below to allow for variable PMI, if PMI gets extended beyond 10 yrs
                v_mi            := case when (N.NEW_PRODUCT like ('%BPMI%') and v_mo_end < 120) or (N.NEW_PRODUCT LIKE ('%HASP%') and N.NEW_MIP_PCT  > 0)  then
                                    round( ( nLoanAmt * cMI_Pct/12 )/ (1+cUFMIP_Pct) ,2)
                                    else round( ( v_avg_balance_yr * cMI_Pct/12 )/ (1+cUFMIP_Pct) ,2) end;

                --- END FHA MI UPDATE

             else  -- Error if MI to be recalc'd, yet neither of these conditions applies
                 --DBMS_OUTPUT.put_line('ERROR IN MI-RECALC: Neither end of MI or Annual Recalc');
                 INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'ERROR IN MI-RECALC: Neither end of MI or Annual Recalc '||nAccount||'  '||nTransaction||'   '||nNewProduct,vRecCtr,nAccount,null); -- logfile entry
                 COMMIT;
             END IF;
        END IF;


        --  ARM Adjustment
        IF v_mo_end= v_mo_arm_adjust THEN
            vR                 := (1+ v_rate);
            v_balance         := ROUND( ( v_balance - v_pmt * (1- POWER(vR,-(v_num_pmts)))  /  (vR-1)    ) * POWER(vR,(v_num_pmts)),2);
            v_rate            := (N.INDX+N.MARGIN)/1200;  -- if an ARM, calc new payment at first adjustment month
            vR                := (1+v_rate);
            v_pmt             := CEIL( 100 * v_balance * ( vR - 1 ) / ( 1 - POWER(vR,(-nTerm+v_mo_arm_adjust))))/100;  -- round up to next whole cent
            v_mo_arm_adjust    := 999;  -- reset value so it will not adjust again after first adjustment
            --DBMS_OUTPUT.put_line('ARM ADJUSTED RATE: '||round(v_rate*1200,4)||'   ARM RESET PI: '||PMT_CTR||'  QC value: '||v_pmt);
        END IF;

    END LOOP;




    --  Next, use an iterative approach to calculate the NPV of the cashflow stream, adjusting the
    --  APR estimate until the NPV of the cashflow is near $0

    --  Get the first guess at APR
    --  http://en.wikipedia.org/wiki/Internal_rate_of_return
    --    Section at above reference for "Numerical solution for single outflow and multiple inflows"
    --      n = iteration
    --      A = sum of payments espressed as positive number
    --      C(0) = loan proceeds (amount-upfront fees, etc) expressed as negative number
    --        N = number of payments (e.g. 240,360) used only for the initial guess
    --      r = rate (APR/IRR guess, r(1)=initial guess, r(2)=2nd guess, r(n)=other guesses
    --  IRR Guess 1:  r1 = (A/abs(C(0)) ^ (2/(N+1) - 1
    --  IRR Guess 2:  r1 = (1 + r(0))^p -1 where p= log(A/abs(C(0))/log(A/NPV1)
--    DBMS_OUTPUT.put_line( ' ');
--    DBMS_OUTPUT.put_line( ' ');
--    DBMS_OUTPUT.put_line( ' APR Initialize Guesses');
    v_cashflow            := v_sum_pmts-(nLoanAmt - cUFMIP_Amt - cTotFees);  --used for QC and comparisons with Excel
    v_c0                := nLoanAmt - cTotFees - cUFMIP_Amt;  -- Initial cash flow amount is loan amount minus all fees
    v_APR_guess_prior    := 0;
    v_npv_prior            := 0;
    --v_APR_guess            := round( POWER ((v_sum_pmts / ABS (v_c0)), (2 / (nTerm + 1))) - 1 , 8);
    v_APR_guess         := case when nTerm=120 then 0.961*(cRateMo * 1.20) + 0.43/1200
                                when nTerm=180 then 0.932*(cRateMo * 1.15) + 0.57/1200
                                when nTerm=240 then 1.854*(cRateMo * 1.13) - 4.04/1200
                                when nTerm=360 then 2.256*(cRateMo * 1.10) - 5.95/1200
                                else cRateMo * 1.15 end;
--    DBMS_OUTPUT.put_line( ' APR Guess Prior: '||round(1200*v_APR_guess_prior,3));

    FOR v_iteration_ctr in 1 .. v_max_iteration -- APR Loop
    LOOP
        v_APR_iterations:=v_iteration_ctr;
     --   DBMS_OUTPUT.put_line( ' ');
     --   DBMS_OUTPUT.put_line('NEW APR ITERATION '||v_iteration_ctr||'     APR Guess:'||round(1200*v_APR_guess,12));

        FOR v_series_ctr IN 0 .. v_num_pmt_series LOOP   -- Payment series loop

            IF v_series_ctr = 0 THEN
                v_npv_nin     := 0;         --NPV without negative value (initial loan proceeds)
                v_npv         := -v_c0;      --net loan proceeds = nLoanAmt - cTotFees - cUFMIP_Amt
                v_cashflow    :=  v_npv;
            ELSE
--                DBMS_OUTPUT.put_line('   CALC NPV OF PAYMENT SERIES: '||v_series_ctr);
--                DBMS_OUTPUT.put_line('   a_starting_mo(v_series_ctr) '||a_starting_mo(v_series_ctr)||'   a_num_pmts(v_series_ctr)  '||a_num_pmts(v_series_ctr) || '   a_pmt_pimi(v_series_ctr)   '||a_pmt_pimi(v_series_ctr)  );

                -- PV of payment series as of start of series:
                --http://www.investopedia.com/articles/03/101503.asp
                --P*(1-(1+r)^(-n))/r where P=Pmt, n=number payments, r=discount rate
                v_npv_series_start := round( a_pmt_pimi(v_series_ctr) *
                                    ( 1 - POWER(( 1 + v_APR_guess ) ,-a_num_pmts(v_series_ctr) )) /
                                    v_APR_guess  ,2);

                 -- Next discount PV from start of series back to start of loan:
                  -- http://easycalculation.com/mortgage/present-value-for-future-value.php
                -- PV(now) = FV * (1 / (1+r)^i )  where i=# months to start of series, r=rate
                v_npv_series_now     := round( v_npv_series_start / POWER( (1 + v_APR_guess), (a_starting_mo(v_series_ctr)-1)  )  ,2);
                --v_npv_nin_prior        := v_npv_nin;
                v_npv_nin             := v_npv_nin     +     v_npv_series_now; -- Cum. NPV of all payment series
                v_npv                 := v_npv         +     v_npv_series_now; -- Cum. NPV of net loan proceeds + all payment series..THIS VALUE NEEDS TO GET CLOSE TO ZERO
--                DBMS_OUTPUT.put_line( ' APR Itn: '||v_APR_iterations
--                                    ||' APR Guess: '||round(1200*v_APR_guess,3)
--                                    ||' Pmt Series: '||v_series_ctr
--                                    ||' Pmt $: '||a_pmt_pimi(v_series_ctr)
--                                    ||' #Pmts: '||a_num_pmts(v_series_ctr)
--                                    ||' NPV@Series Start: '||v_npv_series_start
--                                    ||' NPV Now: '||v_npv_series_now);
--                DBMS_OUTPUT.put_line('Iteration NPV: '||v_npv);
            END IF;
        END LOOP;

        -- Update guess for APR using Secant Method
        --  APR(n+1) = APR(n) - NPV(n) * ( APR(n) - APR(n-1) ) / ( NPV(n) - NPV(n-1) ) where n=iteration
        --v_APR_guess_next     := v_APR_guess  - v_npv * ( * ) / ( * );


        --
        if v_iteration_ctr = 1 then
            -- Formula for 2nd guess
            v_log                 := LOG (10, (v_sum_pmts / ABS (v_c0))) / LOG (10, (v_sum_pmts / v_npv_nin));
            v_APR_guess_next    := round( POWER ((1 + v_APR_guess), v_log) - 1  ,8);
        else
            -- Formula for 3rd and subsequent guesses
--            DBMS_OUTPUT.put_line( 'Calculating v_APR_guess_next.......');
--            dbms_output.put_line('        v_APR_guess: '||( v_APR_guess ) );
--            dbms_output.put_line('v_APR_guess_prior: '||( v_APR_guess_prior ) );
--            dbms_output.put_line('            v_npv: '||( v_npv ) );
--            dbms_output.put_line('      v_npv_prior: '||( v_npv_prior ) );
--            dbms_output.put_line('             v_c0: '||( v_c0 ) );

            v_APR_guess_next    := --ROUND(
                                    v_APR_guess - v_npv * ( (v_APR_guess - v_APR_guess_prior)/( v_npv - v_npv_prior ) ) *
                                    ( 1 - 1.4 * v_npv_prior / ( v_npv_prior - 3*v_npv + 2*v_c0 ) )
                                    --,8)
                                    ;
        end if;
--DBMS_OUTPUT.put_line( ' APR Itn: '||v_APR_iterations
--                    ||' APR Guess Prior: '||round(1200*v_APR_guess_prior,3)
--                    ||'   APR Guess Cur: '||round(1200*v_APR_guess,3)
--                    ||'  APR Guess Next: '||round(1200*v_APR_guess_next,3));

        -- Exit when subsequent values are the same rounded to 2 decimal places.
        EXIT WHEN ROUND(1200*v_APR_guess,2) = ROUND(1200*v_APR_guess_next,2) or ABS(v_npv)<.05;
        v_npv_prior            := v_npv;
        v_APR_guess_prior    := v_APR_guess;
        V_APR_guess            := v_APR_guess_next;

        -- Limit next guess to between 0 and 30% annualized tp avoid errors
        --v_APR_guess := GREATEST( 0, LEAST( 30/1200, v_APR_guess_next));
        --DBMS_OUTPUT.put_line('iteration result: '||v_iteration_ctr||'  '||' APR_guess '||round(1200*v_APR_guess,6)|| '  NPV:'||round(v_npv,2)||' BPO APR:'||nAPR||'  CF:'||v_cashflow);

    END LOOP;



    <<CALC_APR_END>> ------------------------------------------------

    cAPR:= round(1200*v_APR_guess_next,3);
--     DBMS_OUTPUT.PUT_LINE(v_APR_method||'Finsihed APR Calc...    cAPR: '||cAPR  );


    -- Finally, insert a record into the results table with the calculation results
--    DBMS_OUTPUT.put_line ('Insert results record'||' Line #: ' || $$plsql_line);




--INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1b:  Refresh BPO_TMP_CALCS ',null,null,null); -- logfile entry
--COMMIT;


v_exec_segment_timestamp := SYSTIMESTAMP;

    INSERT  /*+ append */  INTO BPO_TMP_CALCS (
        -- Values below carry from BATCH_PRICING_INPUT
        PORTFOLIO,
        SERVICING_SOURCE,
        ACCOUNT_NUMBER,
        CURRENT_PROPERTY_VALUE,
        TRANSACTION,
        NEW_PRODUCT,
        ENG_PROD_CD,
        OLD_RATE,
        OLD_PI,
        OLD_UPB,
        OLD_ADJ_REM_TERM,
        OLD_LTV,
        OLD_MI_TYPE,
        OLD_MI_AMOUNT,
        OLD_MI_ELIM_BAL,
        OLD_MI_ELIM_MOS,
        NEW_MI_ELIM_BAL,
        NEW_MI_ELIM_MOS,
        NEW_TERM,
        -- Values below are calculated above (or below)
        NEW_TERM_REDUCTION,
        NEW_LOAN_AMOUNT,
        NEW_CASHOUT,
        NEW_RATE,
        NEW_PI,
        NEW_PI_SAVINGS_MO,
        NEW_UFMIP_PCT,
        NEW_MIP_PCT,
        NEW_UFMIP,
        NEW_MI_TYPE,
        NEW_MI,
        NEW_PIMI_SAVINGS_MO,
        NEW_LOL_SAVINGS,
        NEW_BASE_FEES,
        NEW_POINTS_PCT,
        NEW_POINTS_DOL,
        NEW_INTERIM_INT,
        NEW_FEES_TOTAL,
        NEW_APR,
        NEW_APR_OLD_METHOD,
        NEW_APR_METHOD,
        NEW_APR_ITERATIONS
    )

    VALUES

    (   N.PORTFOLIO,
        N.SERVICING_SOURCE,
        N.ACCOUNT_NUMBER,
        N.CURRENT_PROPERTY_VALUE,
        N.TRANSACTION,
        N.NEW_PRODUCT,
        N.ENG_PROD_CD,
        N.INTEREST_RATE,
        N.PRINCIPAL_AND_INTEREST,
        N.UNPAID_BALANCE,
        N.ADJ_REMAINING_TERM,
        N.CUR_LTV,
        N.CUR_MI_TYPE,
        N.CUR_MI,
        CMI_ELIM_BAL_OLD,
        CMI_ELIM_MOS_OLD,
        CMI_ELIM_BAL_NEW,
        CMI_ELIM_MOS_NEW,
        N.NEW_TERM,
        ROUND(N.ADJ_REMAINING_TERM-N.NEW_TERM,1),  --Term Reduction
        nLoanAmt,  -- includes Cash Out and Upfront MI, if any
        nLoanAmt_B4_UFMIP-N.UNPAID_BALANCE,
        N.NEW_RATE,
        cPmt,
        N.PRINCIPAL_AND_INTEREST-cPmt,
        cUFMIP_Pct,
        cMI_Pct,
        cUFMIP_Amt,
        case when cMI_Amt=0 then NULL when N.NEW_PRODUCT like '%FHA%' then 'FHA' else 'PMI' end,
        cMI_Amt,
        (N.PRINCIPAL_AND_INTEREST + N.CUR_MI)- (cPmt + cMI_Amt),
        (N.ADJ_REMAINING_TERM*N.PRINCIPAL_AND_INTEREST + case when N.CUR_MI_TYPE='BPMI' then cMI_ELIM_MOS_OLD*N.CUR_MI else 0 end) - v_sum_pmts,
        cBaseFees,
        N.NEW_POINTS_PCT,
        cPtsDol,
        cInterimInt,
        cTotFees,
        cAPR,
        v_APR_long_method,
        v_APR_method,
        v_APR_iterations
    );
    
    IF      vRecCtr = 20000 THEN
         COMMIT;
    END IF;
 
END LOOP;

--DBMS_OUTPUT.put_line('Start: '||to_char(vStartTime,'HH:MI:SS')||'  End: '||to_char(SYSTIMESTAMP,'HH:MI:SS')||
--                     '  Secs: '||round(86400*(SYSDATE-vStartTime),0)||'  Recs: '||vRecCtr||
--                     '  Recs/Sec: '||round(vRecCtr/(86400*(SYSDATE-vStartTime)),0));


INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1b:  # Records per Second: '||round( vRecCtr / GREATEST( 1,86400 * (SYSDATE-vStartTime) ) ,1),
                    null,null,null); -- logfile entry
COMMIT;


-- Exception handling code
EXCEPTION
    WHEN OTHERS THEN

        -- Add error record into Log File

        INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'ERROR ON RECORD: '||nAccount||'  '||nTransaction||'   '||nNewProduct,
                    vRecCtr,nAccount,null); -- logfile entry
        COMMIT;
        INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'BACKTRACE: '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,
                    null,null,null); -- logfile entry
        COMMIT;


        --DBMS_OUTPUT.ENABLE();
        --DBMS_OUTPUT.put_line('========EXCEPTION============');
        --DBMS_OUTPUT.PUT_LINE(SQLERRM);
        --DBMS_OUTPUT.PUT_LINE( DBMS_UTILITY.FORMAT_ERROR_BACKTRACE );
        --DBMS_OUTPUT.put_line(nAccount||'  '||nTransaction||'   '||nNewProduct);
        --DBMS_OUTPUT.DISABLE();
        RAISE;


END;


--select     NEW_APR,NEW_APR_OLD_METHOD,NEW_APR_METHOD,a.*  from BPO_TMP_CALCS A where abs(NEW_APR-        NEW_APR_OLD_METHOD)>=.02 ;
--select     a.*  from    A where rownum<1000 ;
--SELECT TRANSACTION,NEW_PRODUCT, NEW_APR_METHOD, round(avg(NEW_APR_ITERATIONS),1) as AVG_ITERATIONS,max(NEW_APR_ITERATIONS) as MAX_ITERATIONS
--FROM BPO_TMP_CALCS GROUP BY TRANSACTION,NEW_PRODUCT, NEW_APR_METHOD order by 2,1,3;
--SELECT NEW_APR_METHOD,TRANSACTION,NEW_PRODUCT,  NEW_APR_ITERATIONS,count(*) as COUNT
--FROM BPO_TMP_CALCS GROUP BY NEW_APR_METHOD,TRANSACTION,NEW_PRODUCT, NEW_APR_ITERATIONS order by 1,2,3,4;

--------------------------------------------------------------------------------------------------------------
---------- Step 1b:  Update BATCH_PRICING_INPUT with calculation results. ----------


--select NEW_APR, NEW_APR_METHOD, NEW_APR_ITERATIONS from  BPO_TMP_CALCS where ROWNUM < 1000 ;
--stop;






-- 1. Enable Constraints, Validate Indexes On BPO_TMP_CALCS Table .....
-- =======================================================================================================================================
    PKG_UTL_OBJMAINTENANCE.prc_enable_idx_constr
            (p_exec_status_id   => v_exec_status_id, 
             p_exec_status_txt  => v_exec_status_txt, 
             p_called_by        => v_prc_nm, 
             p_load_table_name  => v_tab1_name,
             p_job_name         => NULL,
             p_job_run_id       => NULL
             ); 
             
-- 2. Analyze Indexes On BPO_TMP_CALCS Table .....
-- =======================================================================================================================================            
    PKG_UTL_OBJMAINTENANCE.prc_analyze_tab
        (p_table_owner                  => v_tab_owner,
         p_table_name                   => v_tab1_name, -- 'BPO_TMP_CALCS'
         p_parallel_degree              => 4, 
         p_method_opt                   => 'FOR ALL INDEXED COLUMNS SIZE AUTO', 
         p_partition_yn                 => 'N',
         p_sub_partition_yn             => 'N',
         p_min_partition_refresh_year   => NULL,
         p_max_partition_refresh_year   => NULL,
         p_job_name                     => NULL,
         p_job_run_id                   => NULL
         ); 
  


-- ==========================================================================================================================================
-- 1. Truncate CSRG_PROD.BATCH_PRICING_OUTPUT_BUILD Table ...
-- ==========================================================================================================================================
EXECUTE IMMEDIATE 'TRUNCATE TABLE '||v_tab_owner||'.'||v_cur_build_table||'  DROP STORAGE'; 

v_ddl_smt:='ALTER TABLE '||v_tab_owner||'.'||v_cur_build_table||' NOLOGGING';
EXECUTE IMMEDIATE v_ddl_smt;

v_ddl_smt:='ALTER SESSION ENABLE PARALLEL DML';
EXECUTE IMMEDIATE v_ddl_smt;


-- ==============================================================================================================
-- Disable v_cur_build_table  Constraints: 
-- ==============================================================================================================
PKG_UTL_OBJMAINTENANCE.prc_disable_idx_constr_trig
   (p_exec_status_id             => v_exec_status_id, 
    p_exec_status_txt            => v_exec_status_txt,  
    p_called_by                  => v_prc_nm,  
    p_owner                      => v_tab_owner, -- CSRG_PROD
    p_tab_name                   => v_cur_build_table,  
    p_disable_pk_yn              => 'Y', 
    p_disable_unq_yn             => 'Y', 
    p_disable_chk_yn             => 'N', 
    p_disable_fk_yn              => 'N', 
    p_disable_trig_yn            => 'N',
    p_disable_pk_idx             => 'N',
    p_disable_unq_idx            => 'N',
    p_disable_part_idx           => NULL,  
    p_disable_subpart_idx        => NULL,  
    p_disable_other_idx          => 'Y',
    p_part_idx_sch_pattern       => NULL,  
    p_subpart_idx_sch_pattern    => NULL,
    p_job_name                   => NULL,
    p_job_run_id                 => NULL   
   ); 


INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1c:  Refresh '|| v_cur_build_table ,null,null,null); -- logfile entry
COMMIT;

v_exec_segment_timestamp := SYSTIMESTAMP;

--Code below runs fairly quickly and needs to be tested for speed vs. the MERGE update
--DROP TABLE v_cur_build_table;
INSERT /*+ append PARALLEL(6)*/ INTO BATCH_PRICING_OUTPUT_BUILD
(  PORTFOLIO, 
   SERVICING_SOURCE, 
   ACCOUNT_NUMBER, 
   CURRENT_PROPERTY_VALUE, 
   UNPAID_BALANCE, 
   CONF_LOAN_LIMIT, 
   HI_BAL_LOAN_LIMIT, 
   NEW_LOAN_AMT_TIER, 
   CURRENT_RATE, 
   PRINCIPAL_AND_INTEREST, 
   ADJ_REMAINING_TERM, 
   AD_TERM, 
   P_STATE, 
   TRANSACTION, 
   NEW_PRODUCT, 
   NEW_TERM, 
   TERM, 
   LOAN_AMT, 
   LTV, 
   CLTV, 
   CRED_SCORE, 
   PRODUCT_TYPE_CODE, 
   CUR_MI_TYPE, 
   CUR_MI_AMOUNT, 
   MI_RATE_TYPE, 
   MI_ENDORSE_DT, 
   HARP_IND, 
   ENTITY_CD, 
   ENG_PROD_CD, 
   PROD_DESCRIPT, 
   PROG_TYP, 
   TIER_CD, 
   BLD_STYLE, 
   FNMA_CRED_SCORE_YN, 
   PROP_TYP, 
   AFFINITY_RELTN_CD, 
   TAX_WAIVE, 
   TYPE_CD, 
   USE_CD, 
   PURP_CD, 
   RLOCK_CD, 
   PROMO_CD, 
   MIN_LTV, 
   MAX_LTV, 
   MIN_TERM, 
   MAX_TERM, 
   INVESTOR_RESTRICT, 
   ORG_DATE_RESTRICT, 
   TRANS_RESTRICT, 
   ORIGINATION_FEE, 
   ACTIVE_FLAG, 
   PROD_CD, 
   AM_TYP, 
   BE_RATIO, 
   CHAN_CD, 
   MORT_TYP, 
   PROC_TYP, 
   FIRST_ADJ, 
   FIRST_INC, 
   SEC_ADJ, 
   SEC_INC, 
   MARGIN, 
   INDX, 
   LIFE_CAP, 
   SCHAN_CD, 
   RATE_DT, 
   RATE_TM, 
   RATE_NO, 
   SUBCHANNEL_ID, 
   NEW_LLPA_PTS, 
   LLPA_AGENCY_LIST, 
   LLPA_OTHERS_LIST, 
   NEW_RATE, 
   NEW_POINTS_PCT, 
   NEW_LOAN_AMOUNT, 
   NEW_APR, 
   NEW_BASE_FEES, 
   NEW_POINTS_DOL, 
   NEW_INTERIM_INT, 
   NEW_FEES_TOTAL, 
   NEW_PI, 
   NEW_PI_SAVINGS_MO, 
   NEW_PIMI_SAVINGS_MO, 
   NEW_CASHOUT, 
   NEW_LOL_SAVINGS, 
   NEW_TERM_REDUCTION, 
   NEW_UFMIP_PCT, 
   NEW_MIP_PCT, 
   NEW_MI, 
   NEW_UFMIP
   )
SELECT /*+ PARALLEL(6) */
    a.PORTFOLIO
    ,a.SERVICING_SOURCE
    ,a.ACCOUNT_NUMBER
    ,a.CURRENT_PROPERTY_VALUE
    ,a.UNPAID_BALANCE
    ,a.CONF_LOAN_LIMIT
    ,a.HI_BAL_LOAN_LIMIT
    ,a.NEW_LOAN_AMT_TIER
    ,ROUND(a.INTEREST_RATE * 100 ,3) AS CURRENT_RATE --added by AT on 01/17/2018
    ,a.PRINCIPAL_AND_INTEREST
    ,a.ADJ_REMAINING_TERM
    ,a.AD_TERM
    ,a.P_STATE
    ,a.TRANSACTION
    ,a.NEW_PRODUCT
    ,a.NEW_TERM
    ,a.TERM
    ,a.LOAN_AMT
    ,a.LTV
    ,a.CLTV
    ,a.CRED_SCORE
--    ,a.SUBFI_AMT
--    ,a.INVESTOR_FULL_NAME
--    ,a.REFI_CD
    ,a.PRODUCT_TYPE_CODE
    ,a.CUR_MI_TYPE
    ,a.CUR_MI_AMOUNT
    ,a.MI_RATE_TYPE
    ,a.MI_ENDORSE_DT
    ,a.HARP_IND
    ,a.ENTITY_CD
    ,a.ENG_PROD_CD
    ,a.PROD_DESCRIPT
    ,a.PROG_TYP
    ,a.TIER_CD
    ,a.BLD_STYLE
    ,a.FNMA_CRED_SCORE_YN
    ,a.PROP_TYP
    ,a.AFFINITY_RELTN_CD
    ,a.TAX_WAIVE
    ,a.TYPE_CD
    ,a.USE_CD
    ,a.PURP_CD
    ,a.RLOCK_CD
    ,a.PROMO_CD
    ,a.MIN_LTV
    ,a.MAX_LTV
    ,a.MIN_TERM
    ,a.MAX_TERM
    ,a.INVESTOR_RESTRICT
    ,a.ORG_DATE_RESTRICT
    ,a.TRANS_RESTRICT
    ,a.ORIGINATION_FEE
    ,a.ACTIVE_FLAG
    ,a.PROD_CD
    ,a.AM_TYP
    ,a.BE_RATIO
    ,a.CHAN_CD
    ,a.MORT_TYP
    ,a.PROC_TYP
    ,a.FIRST_ADJ
    ,a.FIRST_INC
    ,a.SEC_ADJ
    ,a.SEC_INC
    ,a.MARGIN
    ,a.INDX
    ,a.LIFE_CAP
    ,a.MIN_PTS --,a.SCHAN_CD replaced per Anupam
    ,a.RATE_DT
    ,a.RATE_TM
    ,a.RATE_NO
    ,a.SUBCHANNEL_ID
    ,a.NEW_LLPA_PTS
    ,a.LLPA_AGENCY_LIST
    ,a.LLPA_OTHERS_LIST
    ,b.NEW_RATE
    --,b.NEW_RATE_PTS
    ,b.NEW_POINTS_PCT
    ,b.NEW_LOAN_AMOUNT
    ,b.NEW_APR
    ,b.NEW_BASE_FEES
    ,b.NEW_POINTS_DOL
    ,b.NEW_INTERIM_INT
    ,b.NEW_FEES_TOTAL
    ,b.NEW_PI
    ,b.NEW_PI_SAVINGS_MO
    ,b.NEW_PIMI_SAVINGS_MO
    ,b.NEW_CASHOUT
    ,b.NEW_LOL_SAVINGS
    ,b.NEW_TERM_REDUCTION
    ,b.NEW_UFMIP_PCT
    ,b.NEW_MIP_PCT
    ,b.NEW_MI
    ,b.NEW_UFMIP
FROM
    BATCH_PRICING_INPUT A,
    BPO_TMP_CALCS B

WHERE
    A.SERVICING_SOURCE=B.SERVICING_SOURCE AND
    A.ACCOUNT_NUMBER=B.ACCOUNT_NUMBER AND
    A.TRANSACTION=B.TRANSACTION AND
    A.NEW_PRODUCT=B.NEW_PRODUCT
;



v_count := SQL%ROWCOUNT;

COMMIT;



--Added on 1/22/2018 with Anupam latest change to uodate new column tran_score


--MERGE INTO BATCH_PRICING_OUTPUT_BUILD BATCH_OUTPUT1
--USING (
--        SELECT 
--            ACCOUNT_NUMBER,
--            TRANSACTION,
--            NEW_PRODUCT,
--            CASE WHEN TRANSACTION LIKE ('%CASHOUT%') THEN ROUND(CASHOUT*100,4)
--            WHEN NEW_TERM <= 120 THEN ROUND(TEN_YR*100,4)
--            WHEN NEW_TERM <= 180 THEN ROUND(FIFTEEN_YR*100,4)
--            WHEN NEW_TERM <= 240 THEN ROUND(TWENTY_YR*100,4)
--            WHEN NEW_TERM > 240 THEN ROUND(THIRTY_YR*100,4)
--            ELSE NULL END AS TRAN_SCORE
--        FROM
--        (
--          SELECT           
--            ACCOUNT_NUMBER,
--            TRANSACTION,
--            NEW_PRODUCT,
--            NEW_TERM,
--            --Block # 1: Calculates the probability that '(TRAN_TYPE2)' equals '10YR'
--            (CASE
--            WHEN ("NEW_LOL_SAVINGS" >= -2387437.9e0 and "NEW_LOL_SAVINGS" < -48753.3e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 52.8e0 and "LTV" < 62.93e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 101133.9e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 101133.9e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 62.93e0 and "LTV" < 74.22e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                        0
--                    WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                        0
--                    WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.0e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        0
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                ELSE
--                    0
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -48753.3e0 and "NEW_LOL_SAVINGS" < -3070.1e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        0.02
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.002701242571582928
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.009708737864077669
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.009708737864077669
--                        ELSE
--                            0.009708737864077669
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0.0018587360594795538
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.05730659025787966
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.0025252525252525255
--                        ELSE
--                            0.028187919463087248
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0
--                        WHEN ("LTV" >= 52.8e0 and "LTV" < 74.22e0) THEN
--                            0
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.00798782807151008
--                    END)
--                ELSE
--                    0.0039004707464694015
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -3070.1e0 and "NEW_LOL_SAVINGS" < 27665.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.08780487804878048
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.29015544041450775
--                        ELSE
--                            0.15257048092868988
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.09776536312849161
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.041390728476821195
--                        ELSE
--                            0.062370062370062374
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.057803468208092484
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.17098445595854922
--                        ELSE
--                            0.11748633879781421
--                        END)
--                    ELSE
--                        0.10098394614189539
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.03065134099616858
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.0023148148148148147
--                        ELSE
--                            0.0011560693641618498
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0
--                    ELSE
--                        0.005131128848346636
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0
--                    END)
--                ELSE
--                    0.027437794216543375
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= 27665.2e0 and "NEW_LOL_SAVINGS" <= 546444.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                        0.16666666666666666
--                    WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                        0.05864197530864197
--                    ELSE
--                        0.10526315789473684
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.0797872340425532
--                        WHEN ("LTV" >= 40.19e0 and "LTV" < 74.22e0) THEN
--                            0.0239880059970015
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.00980392156862745
--                        ELSE
--                            0.03343782654127482
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.019762845849802372
--                    ELSE
--                        0.030578512396694214
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.006329113924050633
--                        WHEN ("LTV" >= 52.8e0 and "LTV" <= 8801.22e0) THEN
--                            0.02167630057803468
--                        ELSE
--                            0.018823529411764704
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.022727272727272728
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" < 137807.78e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 137807.78e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0.00715307582260372
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.012048192771084338
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.008658008658008658
--                        ELSE
--                            0.010657193605683837
--                        END)
--                    ELSE
--                        0.01278409090909091
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.029177718832891247
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.002197802197802198
--                        ELSE
--                            0.0017825311942959
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.003484320557491289
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.008583690987124464
--                        ELSE
--                            0.0057692307692307696
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.004291845493562232
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0.002564102564102564
--                        END)
--                    ELSE
--                        0.008658008658008658
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.014925373134328358
--                        ELSE
--                            0.004784688995215311
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.005917159763313609
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0.0014970059880239522
--                        END)
--                    ELSE
--                        0.0023584905660377358
--                    END)
--                ELSE
--                    0.019365250134480903
--                END)
--            ELSE
--                0.012566666666666667
--            END) AS TEN_YR,
--
--
--            --Block # 2: Calculates the probability that '(TRAN_TYPE2)' equals '15YR'
--            (CASE
--            WHEN ("NEW_LOL_SAVINGS" >= -2387437.9e0 and "NEW_LOL_SAVINGS" < -48753.3e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 52.8e0 and "LTV" < 62.93e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 101133.9e0) THEN
--                            0.001466275659824047
--                        WHEN ("NEW_CASHOUT" >= 101133.9e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.009433962264150943
--                        ELSE
--                            0.0025380710659898475
--                        END)
--                    WHEN ("LTV" >= 62.93e0 and "LTV" < 74.22e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.004629629629629629
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0.0018214936247723133
--                        END)
--                    WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                        0
--                    ELSE
--                        0.0007453416149068323
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                        0
--                    WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                        0
--                    WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.0e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        0
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0.004524886877828055
--                    ELSE
--                        0.0006184291898577613
--                    END)
--                ELSE
--                    0.0005379959650302623
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -48753.3e0 and "NEW_LOL_SAVINGS" < -3070.1e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.035842293906810034
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0.023980815347721823
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0
--                    ELSE
--                        0.007457121551081283
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        0.1
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.01858736059479554
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0.012755102040816327
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.01620745542949757
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.08737864077669903
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.05825242718446602
--                        ELSE
--                            0.06796116504854369
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0.013011152416356878
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.06876790830945559
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.047979797979797977
--                        ELSE
--                            0.05771812080536913
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0
--                        WHEN ("LTV" >= 52.8e0 and "LTV" < 74.22e0) THEN
--                            0
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.016356028908330163
--                    END)
--                ELSE
--                    0.01398789509078682
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -3070.1e0 and "NEW_LOL_SAVINGS" < 27665.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.32439024390243903
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.19170984455958548
--                        ELSE
--                            0.28192371475953565
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.3324022346368715
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.4685430463576159
--                        ELSE
--                            0.4178794178794179
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.24277456647398843
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.18652849740932642
--                        ELSE
--                            0.21311475409836064
--                        END)
--                    ELSE
--                        0.33661315380631796
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.23754789272030652
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.42494226327944573
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.4583333333333333
--                        ELSE
--                            0.4416184971098266
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.20625
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.16883116883116883
--                        ELSE
--                            0.18162393162393162
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0
--                    ELSE
--                        0.3015963511972634
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.20491803278688525
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.4554140127388535
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.30392156862745096
--                        ELSE
--                            0.4182692307692308
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.1317008603573792
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.16
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.32116788321167883
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.018292682926829267
--                        ELSE
--                            0.15614617940199335
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.06028938906752412
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.0502283105022831
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.011055276381909548
--                    END)
--                ELSE
--                    0.196906523201076
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= 27665.2e0 and "NEW_LOL_SAVINGS" <= 546444.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                        0.35772357723577236
--                    WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                        0.4228395061728395
--                    ELSE
--                        0.39473684210526316
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.324468085106383
--                        WHEN ("LTV" >= 40.19e0 and "LTV" < 74.22e0) THEN
--                            0.5187406296851574
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.5392156862745098
--                        ELSE
--                            0.4827586206896552
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.2964426877470356
--                    ELSE
--                        0.44380165289256196
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.4430379746835443
--                        WHEN ("LTV" >= 52.8e0 and "LTV" <= 8801.22e0) THEN
--                            0.6069364161849711
--                        ELSE
--                            0.5764705882352941
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.4818181818181818
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" < 137807.78e0) THEN
--                            0.35714285714285715
--                        WHEN ("NEW_LOAN_AMOUNT" >= 137807.78e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.4666666666666667
--                        ELSE
--                            0.4363376251788269
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.14759036144578314
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.05627705627705628
--                        ELSE
--                            0.11012433392539965
--                        END)
--                    ELSE
--                        0.40577651515151514
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.32891246684350134
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.25471698113207547
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.6879120879120879
--                        ELSE
--                            0.6060606060606061
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.0975609756097561
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.33047210300429186
--                        ELSE
--                            0.20192307692307693
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.07296137339055794
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.050955414012738856
--                        ELSE
--                            0.0641025641025641
--                        END)
--                    ELSE
--                        0.32142857142857145
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.23636363636363636
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.3065134099616858
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.12437810945273632
--                        ELSE
--                            0.22966507177033493
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.02952029520295203
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.038461538461538464
--                        ELSE
--                            0.032418952618453865
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.0761904761904762
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.005076142131979695
--                        ELSE
--                            0.014970059880239521
--                        END)
--                    ELSE
--                        0.09846698113207547
--                    END)
--                ELSE
--                    0.3200645508337816
--                END)
--            ELSE
--                0.13173333333333334
--            END) AS FIFTEEN_YR,
--
--
--            --Block # 3: Calculates the probability that '(TRAN_TYPE2)' equals '20YR'
--            (CASE
--            WHEN ("NEW_LOL_SAVINGS" >= -2387437.9e0 and "NEW_LOL_SAVINGS" < -48753.3e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 52.8e0 and "LTV" < 62.93e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 101133.9e0) THEN
--                            0.001466275659824047
--                        WHEN ("NEW_CASHOUT" >= 101133.9e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.009433962264150943
--                        ELSE
--                            0.0025380710659898475
--                        END)
--                    WHEN ("LTV" >= 62.93e0 and "LTV" < 74.22e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                        0.0033333333333333335
--                    ELSE
--                        0.0007453416149068323
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                        0
--                    WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                        0.009900990099009901
--                    WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.0012853470437017994
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.0e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        0
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0
--                    ELSE
--                        0
--                    END)
--                ELSE
--                    0.0005379959650302623
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -48753.3e0 and "NEW_LOL_SAVINGS" < -3070.1e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.043010752688172046
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0.02877697841726619
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.00625
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0
--                        ELSE
--                            0.0029850746268656717
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0.015748031496062992
--                    ELSE
--                        0.013422818791946308
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        0.012
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.3420074349442379
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.04878048780487805
--                        ELSE
--                            0.25
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0.034722222222222224
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.059967585089141004
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.019417475728155338
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.07281553398058252
--                        ELSE
--                            0.05501618122977346
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.12980769230769232
--                        ELSE
--                            0.06733167082294264
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0.007017543859649123
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0
--                    ELSE
--                        0.028500619578686492
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.014326647564469915
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.03535353535353535
--                        ELSE
--                            0.025503355704697986
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.011857707509881422
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.0027247956403269754
--                        ELSE
--                            0.0064516129032258064
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0
--                        WHEN ("LTV" >= 52.8e0 and "LTV" < 74.22e0) THEN
--                            0
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.008748573602130088
--                    END)
--                ELSE
--                    0.026630800268997983
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -3070.1e0 and "NEW_LOL_SAVINGS" < 27665.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.0024390243902439024
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0.001658374792703151
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.0223463687150838
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.03145695364238411
--                        ELSE
--                            0.028066528066528068
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.16184971098265896
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.09326424870466321
--                        ELSE
--                            0.12568306010928962
--                        END)
--                    ELSE
--                        0.038322112894873125
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.006928406466512702
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.034722222222222224
--                        ELSE
--                            0.020809248554913295
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.25625
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.33766233766233766
--                        ELSE
--                            0.30982905982905984
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.34375
--                    ELSE
--                        0.12428734321550741
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.09554140127388536
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.17647058823529413
--                        ELSE
--                            0.11538461538461539
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.39779005524861877
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.5545023696682464
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.47701149425287354
--                        ELSE
--                            0.48056537102473496
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.09090909090909091
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.003367003367003367
--                        ELSE
--                            0.02702702702702703
--                        END)
--                    ELSE
--                        0.21906022501654535
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.08571428571428572
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.21897810218978103
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.3231707317073171
--                        ELSE
--                            0.2757475083056478
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.26973684210526316
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.4371859296482412
--                        ELSE
--                            0.3646723646723647
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.18167202572347266
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.0821917808219178
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.02857142857142857
--                        ELSE
--                            0.010554089709762533
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.022110552763819097
--                    END)
--                ELSE
--                    0.11714862138533962
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= 27665.2e0 and "NEW_LOL_SAVINGS" <= 546444.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                        0.0040650406504065045
--                    WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                        0.006172839506172839
--                    ELSE
--                        0.005263157894736842
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0
--                        WHEN ("LTV" >= 40.19e0 and "LTV" < 74.22e0) THEN
--                            0.0029985007496251873
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.0392156862745098
--                        ELSE
--                            0.006269592476489028
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.17391304347826086
--                    ELSE
--                        0.04132231404958678
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.006329113924050633
--                        WHEN ("LTV" >= 52.8e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0.001176470588235294
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.12272727272727273
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" < 137807.78e0) THEN
--                            0.21875
--                        WHEN ("NEW_LOAN_AMOUNT" >= 137807.78e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.12549019607843137
--                        ELSE
--                            0.15450643776824036
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.3704819277108434
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.49783549783549785
--                        ELSE
--                            0.4227353463587922
--                        END)
--                    ELSE
--                        0.16429924242424243
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.010610079575596816
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.1509433962264151
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.002197802197802198
--                        ELSE
--                            0.030303030303030304
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.44947735191637633
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.36909871244635195
--                        ELSE
--                            0.41346153846153844
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.3605150214592275
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.35668789808917195
--                        ELSE
--                            0.358974358974359
--                        END)
--                    ELSE
--                        0.20346320346320346
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.18787878787878787
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.09195402298850575
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.11442786069651742
--                        ELSE
--                            0.12440191387559808
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.04797047970479705
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.2076923076923077
--                        ELSE
--                            0.09975062344139651
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.01904761904761905
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.005917159763313609
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.01015228426395939
--                        ELSE
--                            0.010479041916167664
--                        END)
--                    ELSE
--                        0.07370283018867925
--                    END)
--                ELSE
--                    0.12116729424421732
--                END)
--            ELSE
--                0.0658
--            END) AS TWENTY_YR,
--
--
--            --Block # 4: Calculates the probability that '(TRAN_TYPE2)' equals '30YR'
--            (CASE
--            WHEN ("NEW_LOL_SAVINGS" >= -2387437.9e0 and "NEW_LOL_SAVINGS" < -48753.3e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0.0004992511233150275
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.01818181818181818
--                        ELSE
--                            0.0033500837520938024
--                        END)
--                    WHEN ("LTV" >= 52.8e0 and "LTV" < 62.93e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 101133.9e0) THEN
--                            0
--                        WHEN ("NEW_CASHOUT" >= 101133.9e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.02830188679245283
--                        ELSE
--                            0.0038071065989847717
--                        END)
--                    WHEN ("LTV" >= 62.93e0 and "LTV" < 74.22e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.05092592592592592
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.003003003003003003
--                        ELSE
--                            0.02185792349726776
--                        END)
--                    WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                        0.15666666666666668
--                    ELSE
--                        0.017391304347826087
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0.011686143572621035
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0.09310344827586208
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0.1349206349206349
--                    ELSE
--                        0.05024630541871921
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                        0.5188679245283019
--                    WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                        0.13861386138613863
--                    WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0.19760479041916168
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.01485148514851485
--                        ELSE
--                            0.06830122591943957
--                        END)
--                    ELSE
--                        0.13881748071979436
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0.2517985611510791
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                            0.47596153846153844
--                        WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0.5956607495069034
--                        ELSE
--                            0.5105386416861827
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.0e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0.1485148514851485
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0.5042016806722689
--                        ELSE
--                            0.39823008849557523
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        0.2512315270935961
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0.13122171945701358
--                    ELSE
--                        0.4025974025974026
--                    END)
--                ELSE
--                    0.1183591123066577
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -48753.3e0 and "NEW_LOL_SAVINGS" < -3070.1e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.17391304347826086
--                        ELSE
--                            0.05755395683453238
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.002857142857142857
--                        ELSE
--                            0.0014925373134328358
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0
--                    ELSE
--                        0.018642803877703208
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        0.004
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.040892193308550186
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.04878048780487805
--                        ELSE
--                            0.04336734693877551
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0.21875
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0.3511111111111111
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.2025862068965517
--                        ELSE
--                            0.23887079261672095
--                        END)
--                    ELSE
--                        0.16261480280929227
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.32038834951456313
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.12135922330097088
--                        ELSE
--                            0.18770226537216828
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.43523316062176165
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.3076923076923077
--                        ELSE
--                            0.3690773067331671
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0.5052631578947369
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.5666666666666667
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.381294964028777
--                        ELSE
--                            0.4462616822429907
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0.3298429319371728
--                    ELSE
--                        0.3742255266418835
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.25501432664756446
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.45202020202020204
--                        ELSE
--                            0.3597315436241611
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.5138339920948617
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.6267029972752044
--                        ELSE
--                            0.5806451612903226
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.6302250803858521
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.7123287671232876
--                        ELSE
--                            0.6458333333333334
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.3884297520661157
--                        WHEN ("LTV" >= 52.8e0 and "LTV" < 74.22e0) THEN
--                            0.5694444444444444
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.6226415094339622
--                        ELSE
--                            0.5423387096774194
--                        END)
--                    ELSE
--                        0.5298592620768353
--                    END)
--                ELSE
--                    0.31244115669132483
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -3070.1e0 and "NEW_LOL_SAVINGS" < 27665.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.0016556291390728477
--                        ELSE
--                            0.0010395010395010396
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.06936416184971098
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.03626943005181347
--                        ELSE
--                            0.05191256830601093
--                        END)
--                    ELSE
--                        0.010357327809425169
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.0375
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0.01282051282051282
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.225
--                    ELSE
--                        0.02394526795895097
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.24861878453038674
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.014218009478672985
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0.08480565371024736
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.6090909090909091
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.67003367003367
--                        ELSE
--                            0.6535626535626535
--                        END)
--                    ELSE
--                        0.20780939774983453
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.021897810218978103
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.024390243902439025
--                        ELSE
--                            0.023255813953488372
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.3881578947368421
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.12562814070351758
--                        ELSE
--                            0.23931623931623933
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0.7056962025316456
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.5346534653465347
--                        ELSE
--                            0.6642685851318945
--                        END)
--                    ELSE
--                        0.2958199356913183
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.1095890410958904
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.401673640167364
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.25
--                        ELSE
--                            0.34564643799472294
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.38271604938271603
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.3116883116883117
--                        ELSE
--                            0.35516372795969775
--                        END)
--                    ELSE
--                        0.2974874371859296
--                    END)
--                ELSE
--                    0.1398789509078682
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= 27665.2e0 and "NEW_LOL_SAVINGS" <= 546444.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                        0.028455284552845527
--                    WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                        0
--                    ELSE
--                        0.012280701754385965
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0
--                        WHEN ("LTV" >= 40.19e0 and "LTV" < 74.22e0) THEN
--                            0
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.05533596837944664
--                    ELSE
--                        0.011570247933884297
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0
--                        WHEN ("LTV" >= 52.8e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" < 137807.78e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 137807.78e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.030120481927710843
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.09523809523809523
--                        ELSE
--                            0.056838365896980464
--                        END)
--                    ELSE
--                        0.015151515151515152
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.020905923344947737
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.004291845493562232
--                        ELSE
--                            0.013461538461538462
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.12875536480686695
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.2802547770700637
--                        ELSE
--                            0.18974358974358974
--                        END)
--                    ELSE
--                        0.04383116883116883
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.09696969696969697
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.02681992337164751
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.024875621890547265
--                        ELSE
--                            0.044657097288676235
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.36531365313653136
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.3384615384615385
--                        ELSE
--                            0.3566084788029925
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.4095238095238095
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.42011834319526625
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.6116751269035533
--                        ELSE
--                            0.531437125748503
--                        END)
--                    ELSE
--                        0.31014150943396224
--                    END)
--                ELSE
--                    0.08875739644970414
--                END)
--            ELSE
--                0.16343333333333335
--            END) AS THIRTY_YR,
--
--
--            --Block # 5: Calculates the probability that '(TRAN_TYPE2)' equals 'CASHOUT'
--            (CASE
--            WHEN ("NEW_LOL_SAVINGS" >= -2387437.9e0 and "NEW_LOL_SAVINGS" < -48753.3e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0.5147279081377933
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.4025974025974026
--                        ELSE
--                            0.4966499162479062
--                        END)
--                    WHEN ("LTV" >= 52.8e0 and "LTV" < 62.93e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 101133.9e0) THEN
--                            0.5117302052785924
--                        WHEN ("NEW_CASHOUT" >= 101133.9e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.37735849056603776
--                        ELSE
--                            0.4936548223350254
--                        END)
--                    WHEN ("LTV" >= 62.93e0 and "LTV" < 74.22e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.4212962962962963
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.5135135135135135
--                        ELSE
--                            0.4772313296903461
--                        END)
--                    WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                        0.31666666666666665
--                    ELSE
--                        0.48
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0.6076794657762938
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0.4517241379310345
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0.30158730158730157
--                    ELSE
--                        0.5251231527093596
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                        0.0660377358490566
--                    WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                        0.44554455445544555
--                    WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0.3413173652694611
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.5693069306930693
--                        ELSE
--                            0.5026269702276708
--                        END)
--                    ELSE
--                        0.43573264781491
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0.2446043165467626
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                            0.019230769230769232
--                        WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0.021696252465483234
--                        ELSE
--                            0.05737704918032787
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.0e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                            0.40594059405940597
--                        WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" <= 311.0e0) THEN
--                            0.058823529411764705
--                        ELSE
--                            0.16224188790560473
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        0.3448275862068966
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0.46153846153846156
--                    ELSE
--                        0.17068645640074212
--                    END)
--                ELSE
--                    0.41425689307330194
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -48753.3e0 and "NEW_LOL_SAVINGS" < -3070.1e0) THEN
--                (CASE
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                    (CASE
--                    WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.3655913978494624
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.16666666666666666
--                        ELSE
--                            0.2997601918465228
--                        END)
--                    WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" < 5.875e0) THEN
--                        (CASE
--                        WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                            0.50625
--                        WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                            0.48857142857142855
--                        ELSE
--                            0.49701492537313435
--                        END)
--                    WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                        0.6220472440944882
--                    ELSE
--                        0.459358687546607
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        0.464
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.06319702602230483
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.6097560975609756
--                        ELSE
--                            0.23469387755102042
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        0.20833333333333334
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 4.125e0) THEN
--                            0.0044444444444444444
--                        WHEN ("CURRENT_RATE" >= 4.125e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.21408045977011494
--                        ELSE
--                            0.16286644951140064
--                        END)
--                    ELSE
--                        0.2258238789843328
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.14563106796116504
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.22330097087378642
--                        ELSE
--                            0.19741100323624594
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.05181347150259067
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.07692307692307693
--                        ELSE
--                            0.06483790523690773
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        0.10175438596491228
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.013333333333333334
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.06474820143884892
--                        ELSE
--                            0.04672897196261682
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        0.10471204188481675
--                    ELSE
--                        0.09665427509293681
--                    END)
--                WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                    (CASE
--                    WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.12034383954154727
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.050505050505050504
--                        ELSE
--                            0.08322147651006712
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.021798365122615803
--                        ELSE
--                            0.012903225806451613
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.011254019292604502
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.0684931506849315
--                        ELSE
--                            0.022135416666666668
--                        END)
--                    WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.11570247933884298
--                        WHEN ("LTV" >= 52.8e0 and "LTV" < 74.22e0) THEN
--                            0.05555555555555555
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.006289308176100629
--                        ELSE
--                            0.05443548387096774
--                        END)
--                    ELSE
--                        0.043362495245340436
--                    END)
--                ELSE
--                    0.1753866845998655
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= -3070.1e0 and "NEW_LOL_SAVINGS" < 27665.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0.02926829268292683
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.07253886010362694
--                        ELSE
--                            0.04311774461028192
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.008379888268156424
--                        WHEN ("LTV" >= 40.19e0 and "LTV" <= 8801.22e0) THEN
--                            0.013245033112582781
--                        ELSE
--                            0.011434511434511435
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.005780346820809248
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.03626943005181347
--                        ELSE
--                            0.02185792349726776
--                        END)
--                    ELSE
--                        0.02330398757120663
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.14942528735632185
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.009237875288683603
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.032407407407407406
--                        ELSE
--                            0.020809248554913295
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.01875
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.003246753246753247
--                        ELSE
--                            0.008547008547008548
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.0125
--                    ELSE
--                        0.03591790193842646
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.30327868852459017
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.006369426751592357
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.0784313725490196
--                        ELSE
--                            0.02403846153846154
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0.0055248618784530384
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0.004739336492890996
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.034482758620689655
--                        ELSE
--                            0.014134275618374558
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    ELSE
--                        0.036399735274652546
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.19428571428571428
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.054878048780487805
--                        ELSE
--                            0.029900332225913623
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 66963.13e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 66963.13e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.01507537688442211
--                        ELSE
--                            0.008547008547008548
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 199826.41e0) THEN
--                            0.0031645569620253164
--                        WHEN ("NEW_LOAN_AMOUNT" >= 199826.41e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.0297029702970297
--                        ELSE
--                            0.009592326139088728
--                        END)
--                    ELSE
--                        0.04019292604501608
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.182648401826484
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.016736401673640166
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.12142857142857143
--                        ELSE
--                            0.055408970976253295
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 26953.75e0) THEN
--                            0.00411522633744856
--                        WHEN ("NEW_CASHOUT" >= 26953.75e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.032467532467532464
--                        ELSE
--                            0.015113350125944584
--                        END)
--                    ELSE
--                        0.06733668341708543
--                    END)
--                ELSE
--                    0.03765971755211836
--                END)
--            WHEN ("NEW_LOL_SAVINGS" >= 27665.2e0 and "NEW_LOL_SAVINGS" <= 546444.2e0) THEN
--                (CASE
--                WHEN ("ADJ_REMAINING_TERM" >= 1.0e0 and "ADJ_REMAINING_TERM" < 190.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                        0.028455284552845527
--                    WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                        0.009259259259259259
--                    ELSE
--                        0.017543859649122806
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 190.0e0 and "ADJ_REMAINING_TERM" < 217.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 40.19e0) THEN
--                            0.031914893617021274
--                        WHEN ("LTV" >= 40.19e0 and "LTV" < 74.22e0) THEN
--                            0.014992503748125937
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0
--                        ELSE
--                            0.01671891327063741
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        0.011857707509881422
--                    ELSE
--                        0.015702479338842976
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 217.0e0 and "ADJ_REMAINING_TERM" < 238.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 52.8e0) THEN
--                            0.03164556962025317
--                        WHEN ("LTV" >= 52.8e0 and "LTV" <= 8801.22e0) THEN
--                            0.008670520231213872
--                        ELSE
--                            0.012941176470588235
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_LOAN_AMOUNT" >= 10006.32e0 and "NEW_LOAN_AMOUNT" < 100117.1e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 100117.1e0 and "NEW_LOAN_AMOUNT" < 137807.78e0) THEN
--                            0
--                        WHEN ("NEW_LOAN_AMOUNT" >= 137807.78e0 and "NEW_LOAN_AMOUNT" <= 675906.47e0) THEN
--                            0.00392156862745098
--                        ELSE
--                            0.001430615164520744
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.009036144578313253
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.008658008658008658
--                        ELSE
--                            0.008880994671403197
--                        END)
--                    ELSE
--                        0.008049242424242424
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 238.0e0 and "ADJ_REMAINING_TERM" < 311.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        0.05305039787798409
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.018867924528301886
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.004395604395604396
--                        ELSE
--                            0.0071301247771836
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" < 181.2e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 6.625e0) THEN
--                            0
--                        WHEN ("CURRENT_RATE" >= 6.625e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0
--                        ELSE
--                            0
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 181.2e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("LTV" >= 1.61e0 and "LTV" < 74.22e0) THEN
--                            0.012875536480686695
--                        WHEN ("LTV" >= 74.22e0 and "LTV" <= 8801.22e0) THEN
--                            0.006369426751592357
--                        ELSE
--                            0.010256410256410256
--                        END)
--                    ELSE
--                        0.015151515151515152
--                    END)
--                WHEN ("ADJ_REMAINING_TERM" >= 311.0e0 and "ADJ_REMAINING_TERM" <= 480.0e0) THEN
--                    (CASE
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -5997.1e0 and "NEW_PIMI_SAVINGS_MO" < -58.2e0) THEN
--                        (CASE
--                        WHEN ("NEW_CASHOUT" >= -306694.12e0 and "NEW_CASHOUT" < 6188.68e0) THEN
--                            0.01818181818181818
--                        WHEN ("NEW_CASHOUT" >= 6188.68e0 and "NEW_CASHOUT" < 52710.51e0) THEN
--                            0.05363984674329502
--                        WHEN ("NEW_CASHOUT" >= 52710.51e0 and "NEW_CASHOUT" <= 9826693.54e0) THEN
--                            0.05472636815920398
--                        ELSE
--                            0.044657097288676235
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= -58.2e0 and "NEW_PIMI_SAVINGS_MO" < 60.4e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.014760147601476014
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.06923076923076924
--                        ELSE
--                            0.032418952618453865
--                        END)
--                    WHEN ("NEW_PIMI_SAVINGS_MO" >= 60.4e0 and "NEW_PIMI_SAVINGS_MO" <= 60120.1e0) THEN
--                        (CASE
--                        WHEN ("CURRENT_RATE" >= 1.0e0 and "CURRENT_RATE" < 5.0e0) THEN
--                            0.01904761904761905
--                        WHEN ("CURRENT_RATE" >= 5.0e0 and "CURRENT_RATE" < 5.875e0) THEN
--                            0.011834319526627219
--                        WHEN ("CURRENT_RATE" >= 5.875e0 and "CURRENT_RATE" <= 17.975e0) THEN
--                            0.01015228426395939
--                        ELSE
--                            0.011976047904191617
--                        END)
--                    ELSE
--                        0.028891509433962265
--                    END)
--                ELSE
--                    0.01654115115653577
--                END)
--            ELSE
--                0.1596
--            END) AS CASHOUT
--
--         FROM BATCH_PRICING_OUTPUT_BUILD
--      --      WHERE ROWNUM  <1000
--        ) A
--        
--        ) BATCH_OUTPUT2
--    ON (BATCH_OUTPUT1.ACCOUNT_NUMBER = BATCH_OUTPUT2.ACCOUNT_NUMBER AND BATCH_OUTPUT1.TRANSACTION = BATCH_OUTPUT2.TRANSACTION AND BATCH_OUTPUT1.NEW_PRODUCT = BATCH_OUTPUT2.NEW_PRODUCT)
--  WHEN MATCHED THEN
--    UPDATE SET BATCH_OUTPUT1.TRAN_SCORE = BATCH_OUTPUT2.TRAN_SCORE
--; 
--COMMIT;


-- 1. Enable Constraints, Validate Indexes On v_cur_build_table Table .....
-- =======================================================================================================================================
    PKG_UTL_OBJMAINTENANCE.prc_enable_idx_constr
            (p_exec_status_id   => v_exec_status_id, 
             p_exec_status_txt  => v_exec_status_txt, 
             p_called_by        => v_prc_nm, 
             p_load_table_name  => v_cur_build_table,
             p_job_name         => NULL,
             p_job_run_id       => NULL
             ); 
             
-- 2. Analyze Indexes On v_cur_build_table Table .....
-- =======================================================================================================================================            
    PKG_UTL_OBJMAINTENANCE.prc_analyze_tab
        (p_table_owner                  => v_tab_owner,
         p_table_name                   => v_cur_build_table, 
         p_parallel_degree              => 4, 
         p_method_opt                   => 'FOR ALL INDEXED COLUMNS SIZE AUTO', 
         p_partition_yn                 => 'N',
         p_sub_partition_yn             => 'N',
         p_min_partition_refresh_year   => NULL,
         p_max_partition_refresh_year   => NULL,
         p_job_name                     => NULL,
         p_job_run_id                   => NULL
         ); 




v_runtime:=PKG_UTL_GLOBAL.fun_get_runtime(v_exec_segment_timestamp); 

INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1c:  Refresh '|| v_cur_build_table||' Complete.  # Records: ',
                    v_count,v_cur_build_table,v_runtime); -- logfile entry
COMMIT;


INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: ','** Batch Pricing Calculations Complete **',null,null,null); -- logfile entry
COMMIT;  


INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: ','** Swap Synonyms **',null,null,null); -- logfile entry
COMMIT; 

v_runtime:=PKG_UTL_GLOBAL.fun_get_runtime(v_exec_segment_timestamp); 

INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 1d:  Repoint prod synonym '||v_prod_synonym|| ' to refreshed build table ',
                    NULL,v_cur_build_table,v_runtime); -- logfile entry
COMMIT;

-- Repoint the synonum to the refreshed table (_A or _B)
EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM '||v_prod_synonym||' FOR '||v_cur_build_table;
COMMIT;

INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 2d:  Repoint build synonym '||v_build_synonym|| ' to old prod table ',
                    NULL,v_cur_prod_table,v_runtime); -- logfile entry
COMMIT;



EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM '||v_build_synonym||' for '||v_cur_prod_table;
COMMIT;

-- Get current table name for Build Synonym
--v_cur_build_table:=NULL;
--v_cur_build_table := F_GET_PUB_SYNONYM_TABLE_NAME(v_build_synonym);
--
--INSERT INTO CSRG_PROD.BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Step 2e:  Refresh current build table ',
--                    NULL,v_cur_build_table,v_runtime); -- logfile entry
--COMMIT;
---------------Start Refresh Build(ex Production)  Table after synonym swap ---------------------------------------------
-- ==========================================================================================================================================
-- 1. Truncate Production CSRG_PROD.BATCH_PRICING_OUTPUT_ELL Table ...
-- ==========================================================================================================================================
--EXECUTE IMMEDIATE 'TRUNCATE TABLE '||v_tab_owner||'.'||v_cur_build_table||'  DROP STORAGE'; 
--
--v_ddl_smt:='ALTER TABLE '||v_tab_owner||'.'||v_cur_build_table||' NOLOGGING';
--EXECUTE IMMEDIATE v_ddl_smt;
--

-- ==============================================================================================================
-- Disable v_cur_build_table  Constraints: 
-- ==============================================================================================================
--PKG_UTL_OBJMAINTENANCE.prc_disable_idx_constr_trig
--   (p_exec_status_id             => v_exec_status_id, 
--    p_exec_status_txt            => v_exec_status_txt,  
--    p_called_by                  => v_prc_nm,  
--    p_owner                      => v_tab_owner, -- CSRG_PROD
--    p_tab_name                   => v_cur_build_table,  
--    p_disable_pk_yn              => 'Y', 
--    p_disable_unq_yn             => 'Y', 
--    p_disable_chk_yn             => 'N', 
--    p_disable_fk_yn              => 'N', 
--    p_disable_trig_yn            => 'N',
--    p_disable_pk_idx             => 'N',
--    p_disable_unq_idx            => 'N',
--    p_disable_part_idx           => NULL,  
--    p_disable_subpart_idx        => NULL,  
--    p_disable_other_idx          => 'Y',
--    p_part_idx_sch_pattern       => NULL,  
--    p_subpart_idx_sch_pattern    => NULL,
--    p_job_name                   => NULL,
--    p_job_run_id                 => NULL   
--   ); 
--
--INSERT /*+ append PARALLEL(6)*/ INTO BATCH_PRICING_OUTPUT_BUILD
--SELECT * FROM BATCH_PRICING_OUTPUT_ELL;
--COMMIT;
--
--PKG_UTL_OBJMAINTENANCE.prc_enable_idx_constr
--        (p_exec_status_id   => v_exec_status_id, 
--         p_exec_status_txt  => v_exec_status_txt, 
--         p_called_by        => v_prc_nm, 
--         p_load_table_name  => v_cur_build_table,
--         p_job_name         => NULL,
--         p_job_run_id       => NULL
--         ); 
--         
         
---------------End Refresh  Build(ex Production)  Table after synonym swap-----------------------------------------------



v_runtime:=PKG_UTL_GLOBAL.fun_get_runtime(v_exec_total_segment_timestamp); 
            
INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'All Steps Completed', null,null,v_runtime); -- logfile entry
COMMIT;

EXCEPTION
WHEN OTHERS THEN
    --ROLLBACK; 
    v_err_msg := SQLERRM;  
    INSERT INTO BATCH_PRICING_LOG VALUES (SYSTIMESTAMP,'Part 5: '||v_prc_nm,'Part 5 Error  ',null, v_err_msg,null); -- logfile entry
    COMMIT; 
     RAISE_APPLICATION_ERROR(-20001,v_err_msg);
END SP_BP_5_BATCH_PRICING_CALCS;
/
